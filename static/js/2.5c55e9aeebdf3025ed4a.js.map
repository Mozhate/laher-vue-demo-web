{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///src/components/Trianglifyz.vue","webpack:///./src/components/Trianglifyz.vue?4ee9","webpack:///./src/components/Trianglifyz.vue","webpack:///./node_modules/chroma-js/chroma.js","webpack:///./node_modules/seedrandom/lib/tychei.js","webpack:///./node_modules/seedrandom/lib/xor4096.js","webpack:///./node_modules/seedrandom/index.js","webpack:///./node_modules/trianglify/lib/colorbrewer.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///./node_modules/delaunator/index.js","webpack:///./node_modules/seedrandom/lib/alea.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/trianglify/lib/pattern.js","webpack:///./node_modules/seedrandom/lib/xor128.js","webpack:///./node_modules/trianglify/lib/trianglify.js","webpack:///./node_modules/seedrandom/lib/xorshift7.js","webpack:///./node_modules/seedrandom/lib/xorwow.js","webpack:///./node_modules/trianglify/lib/points.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/seedrandom/seedrandom.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Trianglifyz","data","pattern","created","trianglify_default","width","height","png","this","components_Trianglifyz","render","_h","$createElement","_c","_self","staticClass","_v","style","backgroundImage","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","Color","PITHIRD","TWOPI","X","Z","bezier","chroma","clip_rgb","cos","css2rgb","hex2rgb","hsi2rgb","hsl2rgb","hsv2rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","limit","luminance","luminance_x","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb_xyz","type","unpack","xyz_lab","xyz_rgb","x","y","z","m","undefined","apply","color","hsl","h","s","a","hsv","v","rgb","r","g","b","hex","css","lab","lch","c","hsi","gl","mix","interpolate","f","contrast","l1","l2","_Color","arg","args","me","_i","_len","_ref","_ref1","_ref2","_ref3","_ref4","arguments","length","push","_rgb","prototype","slice","rgba","toString","name","lum","mode","cur_lum","max_iter","test","lm","Math","abs","k","colors","alpha","rnd","map","round","join","col","hue","hue0","hue1","lbv","lbv0","lbv1","res","sat","sat0","sat1","xyz0","xyz1","substr","isNaN","Number","NaN","premultiply","darken","amount","darker","brighten","brighter","saturate","desaturate","_j","_k","_l","toLowerCase","match","u","split","parseInt","t1","t2","t3","p","q","t","_ref5","_ref6","floor","sqrt","atan2","PI","pow","sin","L","str","min","acos","max","delta","scale","positions","getClass","getColor","resetCache","setColors","setDomain","tmap","_colorCache","_colors","_correctLightness","_domain","_max","_min","_mode","_nacol","_numClasses","_out","_pos","_spread","brewer","domain","value","n","maxc","minc","val","bypassMap","classes","key","d","analyze","limits","_m","range","out","_o","spread","correctLightness","L0","L1","L_actual","L_diff","L_ideal","pol","t0","samples","scales","cool","hot","filter","add","visit","MAX_VALUE","sum","values","count","num","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","repeat","tmpKMeansBreaks","_n","_p","_q","_r","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref7","_ref8","_ref9","_s","_t","_u","_w","sort","LOG10E","log","Array","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","indigo","gold","hotpink","firebrick","indianred","yellow","mistyrose","darkolivegreen","olive","darkseagreen","pink","tomato","lightcoral","orangered","navajowhite","lime","palegreen","darkslategrey","greenyellow","burlywood","seashell","mediumspringgreen","fuchsia","papayawhip","blanchedalmond","chartreuse","dimgray","black","peachpuff","springgreen","aquamarine","white","orange","lightsalmon","darkslategray","brown","ivory","dodgerblue","peru","lawngreen","chocolate","crimson","forestgreen","darkgrey","lightseagreen","cyan","mintcream","silver","antiquewhite","mediumorchid","skyblue","gray","darkturquoise","goldenrod","darkgreen","floralwhite","darkviolet","darkgray","moccasin","saddlebrown","grey","darkslateblue","lightskyblue","lightpink","mediumvioletred","slategrey","red","deeppink","limegreen","darkmagenta","palegoldenrod","plum","turquoise","lightgrey","lightgoldenrodyellow","darkgoldenrod","lavender","maroon","yellowgreen","sandybrown","thistle","violet","navy","magenta","dimgrey","tan","rosybrown","olivedrab","blue","lightblue","ghostwhite","honeydew","cornflowerblue","slateblue","linen","darkblue","powderblue","seagreen","darkkhaki","snow","sienna","mediumblue","royalblue","lightcyan","green","mediumpurple","midnightblue","cornsilk","paleturquoise","bisque","slategray","darkcyan","khaki","wheat","teal","darkorchid","deepskyblue","salmon","darkred","steelblue","palevioletred","lightslategray","aliceblue","lightslategrey","lightgreen","orchid","gainsboro","mediumseagreen","lightgray","mediumturquoise","lemonchiffon","cadetblue","lightyellow","lavenderblush","coral","purple","aqua","whitesmoke","mediumslateblue","darkorange","mediumaquamarine","darksalmon","beige","blueviolet","azure","lightsteelblue","oldlace","classToType","obj","strType","call","I","I0","I1","lab0","lab1","lab2","lab3","_results","global","define","copy","impl","seed","opts","xg","strseed","next","charCodeAt","state","prng","double","result","int32","quick","tychei","w","Date","init","xor4096","alea","xor128","xorwow","xorshift7","sr","Error","Delaunator","points","getX","getY","defaultGetX","defaultGetY","minX","Infinity","minY","maxX","maxY","coords","ids","Uint32Array","i0","i1","i2","cx","cy","minDist","minRadius","circumradius","area","tmp","i0x","i0y","i1x","i1y","i2x","i2y","center","ax","ay","bx","by","bl","cl","circumcenter","_cx","_cy","quicksort","left","right","temp","compare","median","swap","_hashSize","ceil","_hash","e","hull","insertNode","_hashEdge","xp","yp","maxTriangles","triangles","halfedges","Int32Array","trianglesLen","_addTriangle","start","startKey","_hashKey","removed","walkBack","_legalize","prev","removeNode","subarray","dx","dy","px","py","qx","qy","rx","ry","node","arr","default","bp","cp","a0","b0","al","ar","p0","pl","p1","_link","br","s0","s1","s2","mash","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","doc","document","jsdom","polys","render_canvas","canvas","ctx","createElement","setAttribute","getContext","forEach","poly","fillStyle","strokeStyle","lineWidth","stroke_width","beginPath","moveTo","lineTo","fill","stroke","svg","svgOpts","createElementNS","includeNamespace","path","appendChild","toDataURL","seedrandom","colorbrewer","_generate_points","Pattern","defaults","cell_size","variance","x_colors","y_colors","palette","color_space","color_function","Trianglify","rand","gradient","options","hasOwnProperty","_merge_opts","_random_from_palette","x_color","y_color","cells_x","cells_y","bleed_x","bleed_y","_clamp","interval","geom_indices","lookup_point","vertices","centroid","_map","in_range","out_range","keys","rand_fn","half_cell_size","double_v","negative_v","__webpack_amd_options__","pool","math","nodecrypto","eval","chunks","rngname","startdenom","significance","overflow","mask","callback","shortseed","mixkey","flatten","depth","prop","typ","entropy","tostring","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","navigator","plugins","screen","autoseed","arc4","keylen","S","pass","is_math_call","smear","stringseed","String","fromCharCode","random","ex"],"mappings":"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","file":"static/js/2.5c55e9aeebdf3025ed4a.js","sourcesContent":["module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 3IRH\n// module chunks = 1 2","<template>\n  <div class=\"m-banner\">1\n    <div :style=\"{ backgroundImage: 'url(' + this.pattern + ')' }\"></div>\n  </div>\n</template>\n<script>\n    import Trianglify from 'trianglify'\n\n    export default {\n        data() {\n            return {pattern: ''}\n        },\n        created() {\n            let pattern = Trianglify({\n                width: 1500,\n                height: 300\n            }).png();\n            this.pattern = pattern\n        }\n    }\n</script>\n\n<style scoped>\n  .m-banner div {\n    height: 300px;\n    background-position: 50% 50%;\n    background-size: cover;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Trianglifyz.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"m-banner\"},[_vm._v(\"1\\n  \"),_c('div',{style:({ backgroundImage: 'url(' + this.pattern + ')' })})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7cc82e70\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Trianglifyz.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7cc82e70\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Trianglifyz.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Trianglifyz.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Trianglifyz.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7cc82e70\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Trianglifyz.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7cc82e70\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Trianglifyz.vue\n// module id = null\n// module chunks = ","// Generated by CoffeeScript 1.6.2\n/** echo  * @license echo  * while read i do echo  *  done echo\n*/\n\n\n(function() {\n  var Color, K, PITHIRD, TWOPI, X, Y, Z, bezier, brewer, chroma, clip_rgb, colors, cos, css2rgb, hex2rgb, hsi2rgb, hsl2rgb, hsv2rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, limit, luminance, luminance_x, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb_xyz, root, type, unpack, xyz_lab, xyz_rgb, _ref;\n\n  chroma = function(x, y, z, m) {\n    return new Color(x, y, z, m);\n  };\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.color = function(x, y, z, m) {\n    return new Color(x, y, z, m);\n  };\n\n  chroma.hsl = function(h, s, l, a) {\n    return new Color(h, s, l, a, 'hsl');\n  };\n\n  chroma.hsv = function(h, s, v, a) {\n    return new Color(h, s, v, a, 'hsv');\n  };\n\n  chroma.rgb = function(r, g, b, a) {\n    return new Color(r, g, b, a, 'rgb');\n  };\n\n  chroma.hex = function(x) {\n    return new Color(x);\n  };\n\n  chroma.css = function(x) {\n    return new Color(x);\n  };\n\n  chroma.lab = function(l, a, b) {\n    return new Color(l, a, b, 'lab');\n  };\n\n  chroma.lch = function(l, c, h) {\n    return new Color(l, c, h, 'lch');\n  };\n\n  chroma.hsi = function(h, s, i) {\n    return new Color(h, s, i, 'hsi');\n  };\n\n  chroma.gl = function(r, g, b, a) {\n    return new Color(r * 255, g * 255, b * 255, a, 'gl');\n  };\n\n  chroma.interpolate = function(a, b, f, m) {\n    if ((a == null) || (b == null)) {\n      return '#000';\n    }\n    if (type(a) === 'string') {\n      a = new Color(a);\n    }\n    if (type(b) === 'string') {\n      b = new Color(b);\n    }\n    return a.interpolate(f, b, m);\n  };\n\n  chroma.mix = chroma.interpolate;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2;\n\n    if (type(a) === 'string') {\n      a = new Color(a);\n    }\n    if (type(b) === 'string') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.luminance = function(color) {\n    return chroma(color).luminance();\n  };\n\n  chroma._Color = Color;\n\n  /**\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  Color = (function() {\n    function Color() {\n      var a, arg, args, m, me, me_rgb, x, y, z, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4;\n\n      me = this;\n      args = [];\n      for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n        arg = arguments[_i];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length === 0) {\n        _ref = [255, 0, 255, 1, 'rgb'], x = _ref[0], y = _ref[1], z = _ref[2], a = _ref[3], m = _ref[4];\n      } else if (type(args[0]) === \"array\") {\n        if (args[0].length === 3) {\n          _ref1 = args[0], x = _ref1[0], y = _ref1[1], z = _ref1[2];\n          a = 1;\n        } else if (args[0].length === 4) {\n          _ref2 = args[0], x = _ref2[0], y = _ref2[1], z = _ref2[2], a = _ref2[3];\n        } else {\n          throw 'unknown input argument';\n        }\n        m = (_ref3 = args[1]) != null ? _ref3 : 'rgb';\n      } else if (type(args[0]) === \"string\") {\n        x = args[0];\n        m = 'hex';\n      } else if (type(args[0]) === \"object\") {\n        _ref4 = args[0]._rgb, x = _ref4[0], y = _ref4[1], z = _ref4[2], a = _ref4[3];\n        m = 'rgb';\n      } else if (args.length >= 3) {\n        x = args[0];\n        y = args[1];\n        z = args[2];\n      }\n      if (args.length === 3) {\n        m = 'rgb';\n        a = 1;\n      } else if (args.length === 4) {\n        if (type(args[3]) === \"string\") {\n          m = args[3];\n          a = 1;\n        } else if (type(args[3]) === \"number\") {\n          m = 'rgb';\n          a = args[3];\n        }\n      } else if (args.length === 5) {\n        a = args[3];\n        m = args[4];\n      }\n      if (a == null) {\n        a = 1;\n      }\n      if (m === 'rgb') {\n        me._rgb = [x, y, z, a];\n      } else if (m === 'gl') {\n        me._rgb = [x * 255, y * 255, z * 255, a];\n      } else if (m === 'hsl') {\n        me._rgb = hsl2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'hsv') {\n        me._rgb = hsv2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'hex') {\n        me._rgb = hex2rgb(x);\n      } else if (m === 'lab') {\n        me._rgb = lab2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'lch') {\n        me._rgb = lch2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'hsi') {\n        me._rgb = hsi2rgb(x, y, z);\n        me._rgb[3] = a;\n      }\n      me_rgb = clip_rgb(me._rgb);\n    }\n\n    Color.prototype.rgb = function() {\n      return this._rgb.slice(0, 3);\n    };\n\n    Color.prototype.rgba = function() {\n      return this._rgb;\n    };\n\n    Color.prototype.hex = function() {\n      return rgb2hex(this._rgb);\n    };\n\n    Color.prototype.toString = function() {\n      return this.name();\n    };\n\n    Color.prototype.hsl = function() {\n      return rgb2hsl(this._rgb);\n    };\n\n    Color.prototype.hsv = function() {\n      return rgb2hsv(this._rgb);\n    };\n\n    Color.prototype.lab = function() {\n      return rgb2lab(this._rgb);\n    };\n\n    Color.prototype.lch = function() {\n      return rgb2lch(this._rgb);\n    };\n\n    Color.prototype.hsi = function() {\n      return rgb2hsi(this._rgb);\n    };\n\n    Color.prototype.gl = function() {\n      return [this._rgb[0] / 255, this._rgb[1] / 255, this._rgb[2] / 255, this._rgb[3]];\n    };\n\n    Color.prototype.luminance = function(lum, mode) {\n      var cur_lum, eps, max_iter, test;\n\n      if (mode == null) {\n        mode = 'rgb';\n      }\n      if (!arguments.length) {\n        return luminance(this._rgb);\n      }\n      if (lum === 0) {\n        this._rgb = [0, 0, 0, this._rgb[3]];\n      }\n      if (lum === 1) {\n        this._rgb = [255, 255, 255, this._rgb[3]];\n      }\n      cur_lum = luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n\n        m = l.interpolate(0.5, h, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      this._rgb = (cur_lum > lum ? test(new Color('black'), this) : test(this, new Color('white'))).rgba();\n      return this;\n    };\n\n    Color.prototype.name = function() {\n      var h, k;\n\n      h = this.hex();\n      for (k in chroma.colors) {\n        if (h === chroma.colors[k]) {\n          return k;\n        }\n      }\n      return h;\n    };\n\n    Color.prototype.alpha = function(alpha) {\n      if (arguments.length) {\n        this._rgb[3] = alpha;\n        return this;\n      }\n      return this._rgb[3];\n    };\n\n    Color.prototype.css = function(mode) {\n      var hsl, me, rgb, rnd;\n\n      if (mode == null) {\n        mode = 'rgb';\n      }\n      me = this;\n      rgb = me._rgb;\n      if (mode.length === 3 && rgb[3] < 1) {\n        mode += 'a';\n      }\n      if (mode === 'rgb') {\n        return mode + '(' + rgb.slice(0, 3).map(Math.round).join(',') + ')';\n      } else if (mode === 'rgba') {\n        return mode + '(' + rgb.slice(0, 3).map(Math.round).join(',') + ',' + rgb[3] + ')';\n      } else if (mode === 'hsl' || mode === 'hsla') {\n        hsl = me.hsl();\n        rnd = function(a) {\n          return Math.round(a * 100) / 100;\n        };\n        hsl[0] = rnd(hsl[0]);\n        hsl[1] = rnd(hsl[1] * 100) + '%';\n        hsl[2] = rnd(hsl[2] * 100) + '%';\n        if (mode.length === 4) {\n          hsl[3] = rgb[3];\n        }\n        return mode + '(' + hsl.join(',') + ')';\n      }\n    };\n\n    Color.prototype.interpolate = function(f, col, m) {\n      /*\n      interpolates between colors\n      f = 0 --> me\n      f = 1 --> col\n      */\n\n      var dh, hue, hue0, hue1, lbv, lbv0, lbv1, me, res, sat, sat0, sat1, xyz0, xyz1;\n\n      me = this;\n      if (m == null) {\n        m = 'rgb';\n      }\n      if (type(col) === \"string\") {\n        col = new Color(col);\n      }\n      if (m === 'hsl' || m === 'hsv' || m === 'lch' || m === 'hsi') {\n        if (m === 'hsl') {\n          xyz0 = me.hsl();\n          xyz1 = col.hsl();\n        } else if (m === 'hsv') {\n          xyz0 = me.hsv();\n          xyz1 = col.hsv();\n        } else if (m === 'hsi') {\n          xyz0 = me.hsi();\n          xyz1 = col.hsi();\n        } else if (m === 'lch') {\n          xyz0 = me.lch();\n          xyz1 = col.lch();\n        }\n        if (m.substr(0, 1) === 'h') {\n          hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n          hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n        } else {\n          lbv0 = xyz0[0], sat0 = xyz0[1], hue0 = xyz0[2];\n          lbv1 = xyz1[0], sat1 = xyz1[1], hue1 = xyz1[2];\n        }\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n          if (hue1 > hue0 && hue1 - hue0 > 180) {\n            dh = hue1 - (hue0 + 360);\n          } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n            dh = hue1 + 360 - hue0;\n          } else {\n            dh = hue1 - hue0;\n          }\n          hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n          hue = hue0;\n          if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n            sat = sat0;\n          }\n        } else if (!isNaN(hue1)) {\n          hue = hue1;\n          if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n            sat = sat1;\n          }\n        } else {\n          hue = Number.NaN;\n        }\n        if (sat == null) {\n          sat = sat0 + f * (sat1 - sat0);\n        }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        if (m.substr(0, 1) === 'h') {\n          res = new Color(hue, sat, lbv, m);\n        } else {\n          res = new Color(lbv, sat, hue, m);\n        }\n      } else if (m === 'rgb') {\n        xyz0 = me._rgb;\n        xyz1 = col._rgb;\n        res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n      } else if (m === 'lab') {\n        xyz0 = me.lab();\n        xyz1 = col.lab();\n        res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n      } else {\n        throw \"color mode \" + m + \" is not supported\";\n      }\n      res.alpha(me.alpha() + f * (col.alpha() - me.alpha()));\n      return res;\n    };\n\n    Color.prototype.premultiply = function() {\n      var a, rgb;\n\n      rgb = this.rgb();\n      a = this.alpha();\n      return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n    };\n\n    Color.prototype.darken = function(amount) {\n      var lch, me;\n\n      if (amount == null) {\n        amount = 20;\n      }\n      me = this;\n      lch = me.lch();\n      lch[0] -= amount;\n      return chroma.lch(lch).alpha(me.alpha());\n    };\n\n    Color.prototype.darker = function(amount) {\n      return this.darken(amount);\n    };\n\n    Color.prototype.brighten = function(amount) {\n      if (amount == null) {\n        amount = 20;\n      }\n      return this.darken(-amount);\n    };\n\n    Color.prototype.brighter = function(amount) {\n      return this.brighten(amount);\n    };\n\n    Color.prototype.saturate = function(amount) {\n      var lch, me;\n\n      if (amount == null) {\n        amount = 20;\n      }\n      me = this;\n      lch = me.lch();\n      lch[1] += amount;\n      return chroma.lch(lch).alpha(me.alpha());\n    };\n\n    Color.prototype.desaturate = function(amount) {\n      if (amount == null) {\n        amount = 20;\n      }\n      return this.saturate(-amount);\n    };\n\n    return Color;\n\n  })();\n\n  clip_rgb = function(rgb) {\n    var i;\n\n    for (i in rgb) {\n      if (i < 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    return rgb;\n  };\n\n  css2rgb = function(css) {\n    var hsl, i, m, rgb, _i, _j, _k, _l;\n\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = _i = 0; _i <= 2; i = ++_i) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = _j = 0; _j <= 3; i = ++_j) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = _k = 0; _k <= 2; i = ++_k) {\n        rgb[i] = Math.round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = _l = 0; _l <= 2; i = ++_l) {\n        rgb[i] = Math.round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = u & 0xFF;\n      return [r, g, b, a];\n    }\n    if (rgb = css2rgb(hex)) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  hsi2rgb = function(h, s, i) {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n\n    var b, g, r, _ref;\n\n    _ref = unpack(arguments), h = _ref[0], s = _ref[1], i = _ref[2];\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255];\n  };\n\n  hsl2rgb = function() {\n    var b, c, g, h, i, l, r, s, t1, t2, t3, _i, _ref, _ref1;\n\n    _ref = unpack(arguments), h = _ref[0], s = _ref[1], l = _ref[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = _i = 0; _i <= 2; i = ++_i) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      _ref1 = [Math.round(c[0] * 255), Math.round(c[1] * 255), Math.round(c[2] * 255)], r = _ref1[0], g = _ref1[1], b = _ref1[2];\n    }\n    return [r, g, b];\n  };\n\n  hsv2rgb = function() {\n    var b, f, g, h, i, p, q, r, s, t, v, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;\n\n    _ref = unpack(arguments), h = _ref[0], s = _ref[1], v = _ref[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = Math.floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          _ref1 = [v, t, p], r = _ref1[0], g = _ref1[1], b = _ref1[2];\n          break;\n        case 1:\n          _ref2 = [q, v, p], r = _ref2[0], g = _ref2[1], b = _ref2[2];\n          break;\n        case 2:\n          _ref3 = [p, v, t], r = _ref3[0], g = _ref3[1], b = _ref3[2];\n          break;\n        case 3:\n          _ref4 = [p, q, v], r = _ref4[0], g = _ref4[1], b = _ref4[2];\n          break;\n        case 4:\n          _ref5 = [t, p, v], r = _ref5[0], g = _ref5[1], b = _ref5[2];\n          break;\n        case 5:\n          _ref6 = [v, p, q], r = _ref6[0], g = _ref6[1], b = _ref6[2];\n      }\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    return [r, g, b];\n  };\n\n  K = 18;\n\n  X = 0.950470;\n\n  Y = 1;\n\n  Z = 1.088830;\n\n  lab2lch = function() {\n    var a, b, c, h, l, _ref;\n\n    _ref = unpack(arguments), l = _ref[0], a = _ref[1], b = _ref[2];\n    c = Math.sqrt(a * a + b * b);\n    h = Math.atan2(b, a) / Math.PI * 180;\n    return [l, c, h];\n  };\n\n  lab2rgb = function(l, a, b) {\n    /*\n    adapted to match d3 implementation\n    */\n\n    var g, r, x, y, z, _ref, _ref1;\n\n    if (l !== void 0 && l.length === 3) {\n      _ref = l, l = _ref[0], a = _ref[1], b = _ref[2];\n    }\n    if (l !== void 0 && l.length === 3) {\n      _ref1 = l, l = _ref1[0], a = _ref1[1], b = _ref1[2];\n    }\n    y = (l + 16) / 116;\n    x = y + a / 500;\n    z = y - b / 200;\n    x = lab_xyz(x) * X;\n    y = lab_xyz(y) * Y;\n    z = lab_xyz(z) * Z;\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [limit(r, 0, 255), limit(g, 0, 255), limit(b, 0, 255), 1];\n  };\n\n  lab_xyz = function(x) {\n    if (x > 0.206893034) {\n      return x * x * x;\n    } else {\n      return (x - 4 / 29) / 7.787037;\n    }\n  };\n\n  xyz_rgb = function(r) {\n    return Math.round(255 * (r <= 0.00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - 0.055));\n  };\n\n  lch2lab = function() {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel. These formulas were invented by David Dalrymple to obtain maximum contrast without going out of gamut if the parameters are in the range 0-1.\n    A saturation multiplier was added by Gregor Aisch\n    */\n\n    var c, h, l, _ref;\n\n    _ref = unpack(arguments), l = _ref[0], c = _ref[1], h = _ref[2];\n    h = h * Math.PI / 180;\n    return [l, Math.cos(h) * c, Math.sin(h) * c];\n  };\n\n  lch2rgb = function(l, c, h) {\n    var L, a, b, g, r, _ref, _ref1;\n\n    _ref = lch2lab(l, c, h), L = _ref[0], a = _ref[1], b = _ref[2];\n    _ref1 = lab2rgb(L, a, b), r = _ref1[0], g = _ref1[1], b = _ref1[2];\n    return [limit(r, 0, 255), limit(g, 0, 255), limit(b, 0, 255)];\n  };\n\n  luminance = function(r, g, b) {\n    var _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  rgb2hex = function() {\n    var b, g, r, str, u, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    return \"#\" + str.substr(str.length - 6);\n  };\n\n  rgb2hsi = function() {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n\n    var TWOPI, b, g, h, i, min, r, s, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, max, min, s, _ref;\n\n    if (r !== void 0 && r.length >= 3) {\n      _ref = r, r = _ref[0], g = _ref[1], b = _ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, max, min, r, s, v, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  rgb2lab = function() {\n    var b, g, r, x, y, z, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / X);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Y);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Z);\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return Math.pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(x) {\n    if (x > 0.008856) {\n      return Math.pow(x, 1 / 3);\n    } else {\n      return 7.787037 * x + 4 / 29;\n    }\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, _ref, _ref1;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    _ref1 = rgb2lab(r, g, b), l = _ref1[0], a = _ref1[1], b = _ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  chroma.scale = function(colors, positions) {\n    var classifyValue, f, getClass, getColor, resetCache, setColors, setDomain, tmap, _colorCache, _colors, _correctLightness, _domain, _fixed, _max, _min, _mode, _nacol, _numClasses, _out, _pos, _spread;\n\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _colors = [];\n    _out = false;\n    _pos = [];\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _numClasses = 0;\n    _colorCache = {};\n    setColors = function(colors, positions) {\n      var c, col, _i, _j, _ref, _ref1, _ref2;\n\n      if (colors == null) {\n        colors = ['#ddd', '#222'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (((_ref = chroma.brewer) != null ? _ref[colors] : void 0) != null)) {\n        colors = chroma.brewer[colors];\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = _i = 0, _ref1 = colors.length - 1; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; c = 0 <= _ref1 ? ++_i : --_i) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        if (positions != null) {\n          _pos = positions;\n        } else {\n          _pos = [];\n          for (c = _j = 0, _ref2 = colors.length - 1; 0 <= _ref2 ? _j <= _ref2 : _j >= _ref2; c = 0 <= _ref2 ? ++_j : --_j) {\n            _pos.push(c / (colors.length - 1));\n          }\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    setDomain = function(domain) {\n      if (domain == null) {\n        domain = [];\n      }\n      /*\n      # use this if you want to display a limited number of data classes\n      # possible methods are \"equalinterval\", \"quantiles\", \"custom\"\n      */\n\n      _domain = domain;\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      resetCache();\n      if (domain.length === 2) {\n        return _numClasses = 0;\n      } else {\n        return _numClasses = domain.length - 1;\n      }\n    };\n    getClass = function(value) {\n      var i, n;\n\n      if (_domain != null) {\n        n = _domain.length - 1;\n        i = 0;\n        while (i < n && value >= _domain[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n\n      val = value;\n      if (_domain.length > 2) {\n        n = _domain.length - 1;\n        i = getClass(value);\n        minc = _domain[0] + (_domain[1] - _domain[0]) * (0 + _spread * 0.5);\n        maxc = _domain[n - 1] + (_domain[n] - _domain[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_domain[i] + (_domain[i + 1] - _domain[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, f0, i, k, p, t, _i, _ref;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_domain.length > 2) {\n          c = getClass(val);\n          t = c / (_numClasses - 1);\n        } else {\n          t = f0 = _min !== _max ? (val - _min) / (_max - _min) : 0;\n          t = f0 = (val - _min) / (_max - _min);\n          t = Math.min(1, Math.max(0, t));\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      k = Math.floor(t * 10000);\n      if (_colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = _i = 0, _ref = _pos.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        _colorCache[k] = col;\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors, positions);\n    f = function(v) {\n      var c;\n\n      c = getColor(v);\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.domain = function(domain, classes, mode, key) {\n      var d;\n\n      if (mode == null) {\n        mode = 'e';\n      }\n      if (!arguments.length) {\n        return _domain;\n      }\n      if (classes != null) {\n        d = chroma.analyze(domain, key);\n        if (classes === 0) {\n          domain = [d.min, d.max];\n        } else {\n          domain = chroma.limits(d, mode, classes);\n        }\n      }\n      setDomain(domain);\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (!arguments.length) {\n        return _correctLightness;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.colors = function(out) {\n      var i, samples, _i, _j, _len, _ref;\n\n      if (out == null) {\n        out = 'hex';\n      }\n      colors = [];\n      samples = [];\n      if (_domain.length > 2) {\n        for (i = _i = 1, _ref = _domain.length; 1 <= _ref ? _i < _ref : _i > _ref; i = 1 <= _ref ? ++_i : --_i) {\n          samples.push((_domain[i - 1] + _domain[i]) * 0.5);\n        }\n      } else {\n        samples = _domain;\n      }\n      for (_j = 0, _len = samples.length; _j < _len; _j++) {\n        i = samples[_j];\n        colors.push(f(i)[out]());\n      }\n      return colors;\n    };\n    return f;\n  };\n\n  if ((_ref = chroma.scales) == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, r, val, visit, _i, _len;\n\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (_i = 0, _len = data.length; _i < _len; _i++) {\n        val = data[_i];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max, max_log, min, min_log, mindist, n, nb_iters, newCentroids, p, pb, pr, repeat, sum, tmpKMeansBreaks, value, values, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _s, _t, _u, _v, _w;\n\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = _i = 1, _ref1 = num - 1; 1 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 1 <= _ref1 ? ++_i : --_i) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * Math.log(min);\n      max_log = Math.LOG10E * Math.log(max);\n      limits.push(min);\n      for (i = _j = 1, _ref2 = num - 1; 1 <= _ref2 ? _j <= _ref2 : _j >= _ref2; i = 1 <= _ref2 ? ++_j : --_j) {\n        limits.push(Math.pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = _k = 1, _ref3 = num - 1; 1 <= _ref3 ? _k <= _ref3 : _k >= _ref3; i = 1 <= _ref3 ? ++_k : --_k) {\n        p = values.length * i / num;\n        pb = Math.floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * pr + values[pb + 1] * (1 - pr));\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = _l = 1, _ref4 = num - 1; 1 <= _ref4 ? _l <= _ref4 : _l >= _ref4; i = 1 <= _ref4 ? ++_l : --_l) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = _m = 0, _ref5 = num - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; j = 0 <= _ref5 ? ++_m : --_m) {\n          clusterSizes[j] = 0;\n        }\n        for (i = _n = 0, _ref6 = n - 1; 0 <= _ref6 ? _n <= _ref6 : _n >= _ref6; i = 0 <= _ref6 ? ++_n : --_n) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = _o = 0, _ref7 = num - 1; 0 <= _ref7 ? _o <= _ref7 : _o >= _ref7; j = 0 <= _ref7 ? ++_o : --_o) {\n            dist = Math.abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = _p = 0, _ref8 = num - 1; 0 <= _ref8 ? _p <= _ref8 : _p >= _ref8; j = 0 <= _ref8 ? ++_p : --_p) {\n          newCentroids[j] = null;\n        }\n        for (i = _q = 0, _ref9 = n - 1; 0 <= _ref9 ? _q <= _ref9 : _q >= _ref9; i = 0 <= _ref9 ? ++_q : --_q) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = _r = 0, _ref10 = num - 1; 0 <= _ref10 ? _r <= _ref10 : _r >= _ref10; j = 0 <= _ref10 ? ++_r : --_r) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = _s = 0, _ref11 = num - 1; 0 <= _ref11 ? _s <= _ref11 : _s >= _ref11; j = 0 <= _ref11 ? ++_s : --_s) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = _t = 0, _ref12 = num - 1; 0 <= _ref12 ? _t <= _ref12 : _t >= _ref12; j = 0 <= _ref12 ? ++_t : --_t) {\n        kClusters[j] = [];\n      }\n      for (i = _u = 0, _ref13 = n - 1; 0 <= _ref13 ? _u <= _ref13 : _u >= _ref13; i = 0 <= _ref13 ? ++_u : --_u) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = _v = 0, _ref14 = num - 1; 0 <= _ref14 ? _v <= _ref14 : _v >= _ref14; j = 0 <= _ref14 ? ++_v : --_v) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = _w = 1, _ref15 = tmpKMeansBreaks.length - 1; _w <= _ref15; i = _w += 2) {\n        if (!isNaN(tmpKMeansBreaks[i])) {\n          limits.push(tmpKMeansBreaks[i]);\n        }\n      }\n    }\n    return limits;\n  };\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n  */\n\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n\n  chroma.colors = colors = {\n    indigo: \"#4b0082\",\n    gold: \"#ffd700\",\n    hotpink: \"#ff69b4\",\n    firebrick: \"#b22222\",\n    indianred: \"#cd5c5c\",\n    yellow: \"#ffff00\",\n    mistyrose: \"#ffe4e1\",\n    darkolivegreen: \"#556b2f\",\n    olive: \"#808000\",\n    darkseagreen: \"#8fbc8f\",\n    pink: \"#ffc0cb\",\n    tomato: \"#ff6347\",\n    lightcoral: \"#f08080\",\n    orangered: \"#ff4500\",\n    navajowhite: \"#ffdead\",\n    lime: \"#00ff00\",\n    palegreen: \"#98fb98\",\n    darkslategrey: \"#2f4f4f\",\n    greenyellow: \"#adff2f\",\n    burlywood: \"#deb887\",\n    seashell: \"#fff5ee\",\n    mediumspringgreen: \"#00fa9a\",\n    fuchsia: \"#ff00ff\",\n    papayawhip: \"#ffefd5\",\n    blanchedalmond: \"#ffebcd\",\n    chartreuse: \"#7fff00\",\n    dimgray: \"#696969\",\n    black: \"#000000\",\n    peachpuff: \"#ffdab9\",\n    springgreen: \"#00ff7f\",\n    aquamarine: \"#7fffd4\",\n    white: \"#ffffff\",\n    orange: \"#ffa500\",\n    lightsalmon: \"#ffa07a\",\n    darkslategray: \"#2f4f4f\",\n    brown: \"#a52a2a\",\n    ivory: \"#fffff0\",\n    dodgerblue: \"#1e90ff\",\n    peru: \"#cd853f\",\n    lawngreen: \"#7cfc00\",\n    chocolate: \"#d2691e\",\n    crimson: \"#dc143c\",\n    forestgreen: \"#228b22\",\n    darkgrey: \"#a9a9a9\",\n    lightseagreen: \"#20b2aa\",\n    cyan: \"#00ffff\",\n    mintcream: \"#f5fffa\",\n    silver: \"#c0c0c0\",\n    antiquewhite: \"#faebd7\",\n    mediumorchid: \"#ba55d3\",\n    skyblue: \"#87ceeb\",\n    gray: \"#808080\",\n    darkturquoise: \"#00ced1\",\n    goldenrod: \"#daa520\",\n    darkgreen: \"#006400\",\n    floralwhite: \"#fffaf0\",\n    darkviolet: \"#9400d3\",\n    darkgray: \"#a9a9a9\",\n    moccasin: \"#ffe4b5\",\n    saddlebrown: \"#8b4513\",\n    grey: \"#808080\",\n    darkslateblue: \"#483d8b\",\n    lightskyblue: \"#87cefa\",\n    lightpink: \"#ffb6c1\",\n    mediumvioletred: \"#c71585\",\n    slategrey: \"#708090\",\n    red: \"#ff0000\",\n    deeppink: \"#ff1493\",\n    limegreen: \"#32cd32\",\n    darkmagenta: \"#8b008b\",\n    palegoldenrod: \"#eee8aa\",\n    plum: \"#dda0dd\",\n    turquoise: \"#40e0d0\",\n    lightgrey: \"#d3d3d3\",\n    lightgoldenrodyellow: \"#fafad2\",\n    darkgoldenrod: \"#b8860b\",\n    lavender: \"#e6e6fa\",\n    maroon: \"#800000\",\n    yellowgreen: \"#9acd32\",\n    sandybrown: \"#f4a460\",\n    thistle: \"#d8bfd8\",\n    violet: \"#ee82ee\",\n    navy: \"#000080\",\n    magenta: \"#ff00ff\",\n    dimgrey: \"#696969\",\n    tan: \"#d2b48c\",\n    rosybrown: \"#bc8f8f\",\n    olivedrab: \"#6b8e23\",\n    blue: \"#0000ff\",\n    lightblue: \"#add8e6\",\n    ghostwhite: \"#f8f8ff\",\n    honeydew: \"#f0fff0\",\n    cornflowerblue: \"#6495ed\",\n    slateblue: \"#6a5acd\",\n    linen: \"#faf0e6\",\n    darkblue: \"#00008b\",\n    powderblue: \"#b0e0e6\",\n    seagreen: \"#2e8b57\",\n    darkkhaki: \"#bdb76b\",\n    snow: \"#fffafa\",\n    sienna: \"#a0522d\",\n    mediumblue: \"#0000cd\",\n    royalblue: \"#4169e1\",\n    lightcyan: \"#e0ffff\",\n    green: \"#008000\",\n    mediumpurple: \"#9370db\",\n    midnightblue: \"#191970\",\n    cornsilk: \"#fff8dc\",\n    paleturquoise: \"#afeeee\",\n    bisque: \"#ffe4c4\",\n    slategray: \"#708090\",\n    darkcyan: \"#008b8b\",\n    khaki: \"#f0e68c\",\n    wheat: \"#f5deb3\",\n    teal: \"#008080\",\n    darkorchid: \"#9932cc\",\n    deepskyblue: \"#00bfff\",\n    salmon: \"#fa8072\",\n    darkred: \"#8b0000\",\n    steelblue: \"#4682b4\",\n    palevioletred: \"#db7093\",\n    lightslategray: \"#778899\",\n    aliceblue: \"#f0f8ff\",\n    lightslategrey: \"#778899\",\n    lightgreen: \"#90ee90\",\n    orchid: \"#da70d6\",\n    gainsboro: \"#dcdcdc\",\n    mediumseagreen: \"#3cb371\",\n    lightgray: \"#d3d3d3\",\n    mediumturquoise: \"#48d1cc\",\n    lemonchiffon: \"#fffacd\",\n    cadetblue: \"#5f9ea0\",\n    lightyellow: \"#ffffe0\",\n    lavenderblush: \"#fff0f5\",\n    coral: \"#ff7f50\",\n    purple: \"#800080\",\n    aqua: \"#00ffff\",\n    whitesmoke: \"#f5f5f5\",\n    mediumslateblue: \"#7b68ee\",\n    darkorange: \"#ff8c00\",\n    mediumaquamarine: \"#66cdaa\",\n    darksalmon: \"#e9967a\",\n    beige: \"#f5f5dc\",\n    blueviolet: \"#8a2be2\",\n    azure: \"#f0ffff\",\n    lightsteelblue: \"#b0c4de\",\n    oldlace: \"#fdf5e6\"\n  };\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  type = (function() {\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n    */\n\n    var classToType, name, _i, _len, _ref1;\n\n    classToType = {};\n    _ref1 = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      name = _ref1[_i];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return args;\n    } else {\n      return args[0];\n    }\n  };\n\n  TWOPI = Math.PI * 2;\n\n  PITHIRD = Math.PI / 3;\n\n  cos = Math.cos;\n\n  /*\n  interpolates between a set of colors uzing a bezier spline\n  */\n\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, _ref1, _ref2, _ref3;\n\n    colors = (function() {\n      var _i, _len, _results;\n\n      _results = [];\n      for (_i = 0, _len = colors.length; _i < _len; _i++) {\n        c = colors[_i];\n        _results.push(chroma(c));\n      }\n      return _results;\n    })();\n    if (colors.length === 2) {\n      _ref1 = (function() {\n        var _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = colors.length; _i < _len; _i++) {\n          c = colors[_i];\n          _results.push(c.lab());\n        }\n        return _results;\n      })(), lab0 = _ref1[0], lab1 = _ref1[1];\n      I = function(t) {\n        var i, lab;\n\n        lab = (function() {\n          var _i, _results;\n\n          _results = [];\n          for (i = _i = 0; _i <= 2; i = ++_i) {\n            _results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return _results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      _ref2 = (function() {\n        var _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = colors.length; _i < _len; _i++) {\n          c = colors[_i];\n          _results.push(c.lab());\n        }\n        return _results;\n      })(), lab0 = _ref2[0], lab1 = _ref2[1], lab2 = _ref2[2];\n      I = function(t) {\n        var i, lab;\n\n        lab = (function() {\n          var _i, _results;\n\n          _results = [];\n          for (i = _i = 0; _i <= 2; i = ++_i) {\n            _results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return _results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      _ref3 = (function() {\n        var _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = colors.length; _i < _len; _i++) {\n          c = colors[_i];\n          _results.push(c.lab());\n        }\n        return _results;\n      })(), lab0 = _ref3[0], lab1 = _ref3[1], lab2 = _ref3[2], lab3 = _ref3[3];\n      I = function(t) {\n        var i, lab;\n\n        lab = (function() {\n          var _i, _results;\n\n          _results = [];\n          for (i = _i = 0; _i <= 2; i = ++_i) {\n            _results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return _results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.interpolate.bezier = bezier;\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chroma-js/chroma.js\n// module id = 4SWg\n// module chunks = 2","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/tychei.js\n// module id = 4dK1\n// module chunks = 2","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xor4096.js\n// module id = 9g4f\n// module chunks = 2","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/index.js\n// module id = H/Ud\n// module chunks = 2","/*\n * colorbrewer.js\n *\n * Colorbrewer colors, by Cindy Brewer\n */\n\nmodule.exports = {\n  YlGn: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"],\n  YlGnBu: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"],\n  GnBu: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"],\n  BuGn: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"],\n  PuBuGn: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"],\n  PuBu: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"],\n  BuPu: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"],\n  RdPu: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"],\n  PuRd: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"],\n  OrRd: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"],\n  YlOrRd: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"],\n  YlOrBr: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"],\n  Purples: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"],\n  Blues: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"],\n  Greens: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"],\n  Oranges: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"],\n  Reds: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"],\n  Greys: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"],\n  PuOr: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n  BrBG: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n  PRGn: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n  PiYG: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n  RdBu: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n  RdGy: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n  RdYlBu: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n  Spectral: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n  RdYlGn: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trianglify/lib/colorbrewer.js\n// module id = HjE5\n// module chunks = 2","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = LGuY\n// module chunks = 2","'use strict';\n\nmodule.exports = Delaunator;\nmodule.exports.default = Delaunator;\n\nfunction Delaunator(points, getX, getY) {\n\n    if (!getX) getX = defaultGetX;\n    if (!getY) getY = defaultGetY;\n\n    var minX = Infinity;\n    var minY = Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n\n    var coords = this.coords = [];\n    var ids = this.ids = new Uint32Array(points.length);\n\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        var x = getX(p);\n        var y = getY(p);\n        ids[i] = i;\n        coords[2 * i] = x;\n        coords[2 * i + 1] = y;\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    var cx = (minX + maxX) / 2;\n    var cy = (minY + maxY) / 2;\n\n    var minDist = Infinity;\n    var i0, i1, i2;\n\n    // pick a seed point close to the centroid\n    for (i = 0; i < points.length; i++) {\n        var d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n        if (d < minDist) {\n            i0 = i;\n            minDist = d;\n        }\n    }\n\n    minDist = Infinity;\n\n    // find the point closest to the seed\n    for (i = 0; i < points.length; i++) {\n        if (i === i0) continue;\n        d = dist(coords[2 * i0], coords[2 * i0 + 1], coords[2 * i], coords[2 * i + 1]);\n        if (d < minDist && d > 0) {\n            i1 = i;\n            minDist = d;\n        }\n    }\n\n    var minRadius = Infinity;\n\n    // find the third point which forms the smallest circumcircle with the first two\n    for (i = 0; i < points.length; i++) {\n        if (i === i0 || i === i1) continue;\n\n        var r = circumradius(\n            coords[2 * i0], coords[2 * i0 + 1],\n            coords[2 * i1], coords[2 * i1 + 1],\n            coords[2 * i], coords[2 * i + 1]);\n\n        if (r < minRadius) {\n            i2 = i;\n            minRadius = r;\n        }\n    }\n\n    if (minRadius === Infinity) {\n        throw new Error('No Delaunay triangulation exists for this input.');\n    }\n\n    // swap the order of the seed points for counter-clockwise orientation\n    if (area(coords[2 * i0], coords[2 * i0 + 1],\n        coords[2 * i1], coords[2 * i1 + 1],\n        coords[2 * i2], coords[2 * i2 + 1]) < 0) {\n\n        var tmp = i1;\n        i1 = i2;\n        i2 = tmp;\n    }\n\n    var i0x = coords[2 * i0];\n    var i0y = coords[2 * i0 + 1];\n    var i1x = coords[2 * i1];\n    var i1y = coords[2 * i1 + 1];\n    var i2x = coords[2 * i2];\n    var i2y = coords[2 * i2 + 1];\n\n    var center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n    this._cx = center.x;\n    this._cy = center.y;\n\n    // sort the points by distance from the seed triangle circumcenter\n    quicksort(ids, coords, 0, ids.length - 1, center.x, center.y);\n\n    // initialize a hash table for storing edges of the advancing convex hull\n    this._hashSize = Math.ceil(Math.sqrt(points.length));\n    this._hash = [];\n    for (i = 0; i < this._hashSize; i++) this._hash[i] = null;\n\n    // initialize a circular doubly-linked list that will hold an advancing convex hull\n    var e = this.hull = insertNode(coords, i0);\n    this._hashEdge(e);\n    e.t = 0;\n    e = insertNode(coords, i1, e);\n    this._hashEdge(e);\n    e.t = 1;\n    e = insertNode(coords, i2, e);\n    this._hashEdge(e);\n    e.t = 2;\n\n    var maxTriangles = 2 * points.length - 5;\n    var triangles = this.triangles = new Uint32Array(maxTriangles * 3);\n    var halfedges = this.halfedges = new Int32Array(maxTriangles * 3);\n\n    this.trianglesLen = 0;\n\n    this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n    var xp, yp;\n    for (var k = 0; k < ids.length; k++) {\n        i = ids[k];\n        x = coords[2 * i];\n        y = coords[2 * i + 1];\n\n        // skip duplicate points\n        if (x === xp && y === yp) continue;\n        xp = x;\n        yp = y;\n\n        // skip seed triangle points\n        if ((x === i0x && y === i0y) ||\n            (x === i1x && y === i1y) ||\n            (x === i2x && y === i2y)) continue;\n\n        // find a visible edge on the convex hull using edge hash\n        var startKey = this._hashKey(x, y);\n        var key = startKey;\n        var start;\n        do {\n            start = this._hash[key];\n            key = (key + 1) % this._hashSize;\n        } while ((!start || start.removed) && key !== startKey);\n\n        e = start;\n        while (area(x, y, e.x, e.y, e.next.x, e.next.y) >= 0) {\n            e = e.next;\n            if (e === start) {\n                throw new Error('Something is wrong with the input points.');\n            }\n        }\n\n        var walkBack = e === start;\n\n        // add the first triangle from the point\n        var t = this._addTriangle(e.i, i, e.next.i, -1, -1, e.t);\n\n        e.t = t; // keep track of boundary triangles on the hull\n        e = insertNode(coords, i, e);\n\n        // recursively flip triangles from the point until they satisfy the Delaunay condition\n        e.t = this._legalize(t + 2);\n        if (e.prev.prev.t === halfedges[t + 1]) {\n            e.prev.prev.t = t + 2;\n        }\n\n        // walk forward through the hull, adding more triangles and flipping recursively\n        var q = e.next;\n        while (area(x, y, q.x, q.y, q.next.x, q.next.y) < 0) {\n            t = this._addTriangle(q.i, i, q.next.i, q.prev.t, -1, q.t);\n            q.prev.t = this._legalize(t + 2);\n            this.hull = removeNode(q);\n            q = q.next;\n        }\n\n        if (walkBack) {\n            // walk backward from the other side, adding more triangles and flipping\n            q = e.prev;\n            while (area(x, y, q.prev.x, q.prev.y, q.x, q.y) < 0) {\n                t = this._addTriangle(q.prev.i, i, q.i, -1, q.t, q.prev.t);\n                this._legalize(t + 2);\n                q.prev.t = t;\n                this.hull = removeNode(q);\n                q = q.prev;\n            }\n        }\n\n        // save the two new edges in the hash table\n        this._hashEdge(e);\n        this._hashEdge(e.prev);\n    }\n\n    // trim typed triangle mesh arrays\n    this.triangles = triangles.subarray(0, this.trianglesLen);\n    this.halfedges = halfedges.subarray(0, this.trianglesLen);\n}\n\nDelaunator.prototype = {\n\n    _hashEdge: function (e) {\n        this._hash[this._hashKey(e.x, e.y)] = e;\n    },\n\n    _hashKey: function (x, y) {\n        var dx = x - this._cx;\n        var dy = y - this._cy;\n        // use pseudo-angle: a measure that monotonically increases\n        // with real angle, but doesn't require expensive trigonometry\n        var p = 1 - dx / (Math.abs(dx) + Math.abs(dy));\n        return Math.floor((2 + (dy < 0 ? -p : p)) / 4 * this._hashSize);\n    },\n\n    _legalize: function (a) {\n        var triangles = this.triangles;\n        var coords = this.coords;\n        var halfedges = this.halfedges;\n\n        var b = halfedges[a];\n\n        var a0 = a - a % 3;\n        var b0 = b - b % 3;\n\n        var al = a0 + (a + 1) % 3;\n        var ar = a0 + (a + 2) % 3;\n        var bl = b0 + (b + 2) % 3;\n\n        var p0 = triangles[ar];\n        var pr = triangles[a];\n        var pl = triangles[al];\n        var p1 = triangles[bl];\n\n        var illegal = inCircle(\n            coords[2 * p0], coords[2 * p0 + 1],\n            coords[2 * pr], coords[2 * pr + 1],\n            coords[2 * pl], coords[2 * pl + 1],\n            coords[2 * p1], coords[2 * p1 + 1]);\n\n        if (illegal) {\n            triangles[a] = p1;\n            triangles[b] = p0;\n\n            this._link(a, halfedges[bl]);\n            this._link(b, halfedges[ar]);\n            this._link(ar, bl);\n\n            var br = b0 + (b + 1) % 3;\n\n            this._legalize(a);\n            return this._legalize(br);\n        }\n\n        return ar;\n    },\n\n    _link: function (a, b) {\n        this.halfedges[a] = b;\n        if (b !== -1) this.halfedges[b] = a;\n    },\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle: function (i0, i1, i2, a, b, c) {\n        var t = this.trianglesLen;\n\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n};\n\nfunction dist(ax, ay, bx, by) {\n    var dx = ax - bx;\n    var dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction area(px, py, qx, qy, rx, ry) {\n    return (qy - py) * (rx - qx) - (qx - px) * (ry - qy);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    ax -= px;\n    ay -= py;\n    bx -= px;\n    by -= py;\n    cx -= px;\n    cy -= py;\n\n    var ap = ax * ax + ay * ay;\n    var bp = bx * bx + by * by;\n    var cp = cx * cx + cy * cy;\n\n    return ax * (by * cp - bp * cy) -\n           ay * (bx * cp - bp * cx) +\n           ap * (bx * cy - by * cx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    bx -= ax;\n    by -= ay;\n    cx -= ax;\n    cy -= ay;\n\n    var bl = bx * bx + by * by;\n    var cl = cx * cx + cy * cy;\n\n    if (bl === 0 || cl === 0) return Infinity;\n\n    var d = bx * cy - by * cx;\n    if (d === 0) return Infinity;\n\n    var x = (cy * bl - by * cl) * 0.5 / d;\n    var y = (bx * cl - cx * bl) * 0.5 / d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    bx -= ax;\n    by -= ay;\n    cx -= ax;\n    cy -= ay;\n\n    var bl = bx * bx + by * by;\n    var cl = cx * cx + cy * cy;\n\n    var d = bx * cy - by * cx;\n\n    var x = (cy * bl - by * cl) * 0.5 / d;\n    var y = (bx * cl - cx * bl) * 0.5 / d;\n\n    return {\n        x: ax + x,\n        y: ay + y\n    };\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(coords, i, prev) {\n    var node = {\n        i: i,\n        x: coords[2 * i],\n        y: coords[2 * i + 1],\n        t: 0,\n        prev: null,\n        next: null,\n        removed: false\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\nfunction removeNode(node) {\n    node.prev.next = node.next;\n    node.next.prev = node.prev;\n    node.removed = true;\n    return node.prev;\n}\n\nfunction quicksort(ids, coords, left, right, cx, cy) {\n    var i, j, temp;\n\n    if (right - left <= 20) {\n        for (i = left + 1; i <= right; i++) {\n            temp = ids[i];\n            j = i - 1;\n            while (j >= left && compare(coords, ids[j], temp, cx, cy) > 0) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        var median = (left + right) >> 1;\n        i = left + 1;\n        j = right;\n        swap(ids, median, i);\n        if (compare(coords, ids[left], ids[right], cx, cy) > 0) swap(ids, left, right);\n        if (compare(coords, ids[i], ids[right], cx, cy) > 0) swap(ids, i, right);\n        if (compare(coords, ids[left], ids[i], cx, cy) > 0) swap(ids, left, i);\n\n        temp = ids[i];\n        while (true) {\n            do i++; while (compare(coords, ids[i], temp, cx, cy) < 0);\n            do j--; while (compare(coords, ids[j], temp, cx, cy) > 0);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, coords, i, right, cx, cy);\n            quicksort(ids, coords, left, j - 1, cx, cy);\n        } else {\n            quicksort(ids, coords, left, j - 1, cx, cy);\n            quicksort(ids, coords, i, right, cx, cy);\n        }\n    }\n}\n\nfunction compare(coords, i, j, cx, cy) {\n    var d1 = dist(coords[2 * i], coords[2 * i + 1], cx, cy);\n    var d2 = dist(coords[2 * j], coords[2 * j + 1], cx, cy);\n    return (d1 - d2) || (coords[2 * i] - coords[2 * j]) || (coords[2 * i + 1] - coords[2 * j + 1]);\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/delaunator/index.js\n// module id = TbF0\n// module chunks = 2","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/alea.js\n// module id = VOQS\n// module chunks = 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 1 2","/*\n * Pattern.js\n * Contains rendering implementations for trianglify-generated geometry\n */\n\n// conditionally load jsdom if we don't have a browser environment available.\nvar doc = (typeof document !== \"undefined\") ? document : require('jsdom').jsdom('<html/>');\n\nfunction Pattern(polys, opts) {\n\n  // SVG rendering method\n  function render_svg(svgOpts) {\n    var svg = doc.createElementNS(\"http://www.w3.org/2000/svg\", 'svg');\n    svg.setAttribute('width', opts.width);\n    svg.setAttribute('height', opts.height);\n    if (svgOpts && svgOpts.includeNamespace) {\n      svg.setAttribute('xmlns','http://www.w3.org/2000/svg');\n    }\n\n    polys.forEach(function(poly) {\n      var path = doc.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n      path.setAttribute(\"d\", \"M\" + poly[1].join(\"L\") + \"Z\");\n      path.setAttribute(\"fill\", poly[0]);\n      path.setAttribute(\"stroke\", poly[0]);\n      path.setAttribute(\"stroke-width\", opts.stroke_width);\n      svg.appendChild(path);\n    });\n\n    return svg;\n  }\n\n  // Canvas rendering method\n  function render_canvas(canvas) {\n    // check for canvas support\n    var ctx;\n    if (typeof process === 'object' && \n        typeof process.versions === 'object' && \n        typeof process.versions.node !== 'undefined') {\n      // In Node environment.\n      try {\n        require('canvas');\n      } catch (e) {\n        throw Error('The optional node-canvas dependency is needed for Trianglify to render using canvas in node.');\n      }\n    }\n\n    if (!canvas) {\n      canvas = doc.createElement('canvas');\n    }\n\n    canvas.setAttribute('width', opts.width);\n    canvas.setAttribute('height', opts.height);\n    ctx = canvas.getContext(\"2d\");\n    ctx.canvas.width = opts.width;\n    ctx.canvas.height = opts.height;\n\n    polys.forEach(function(poly) {\n      ctx.fillStyle = ctx.strokeStyle = poly[0];\n      ctx.lineWidth = opts.stroke_width;\n      ctx.beginPath();\n      ctx.moveTo.apply(ctx, poly[1][0]);\n      ctx.lineTo.apply(ctx, poly[1][1]);\n      ctx.lineTo.apply(ctx, poly[1][2]);\n      ctx.fill();\n      ctx.stroke();\n    });\n\n    return canvas;\n  }\n\n  // PNG rendering method\n  // currently returns a data url as a string since toBlob support really isn't there yet...\n  function render_png() {\n    return render_canvas().toDataURL(\"image/png\");\n  }\n\n  // Return an object with all the relevant functions/properties attached to it\n  return {\n    polys: polys,\n    opts: opts,\n    svg: render_svg,\n    canvas: render_canvas,\n    png: render_png\n  };\n}\n\nmodule.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trianglify/lib/pattern.js\n// module id = YHZ5\n// module chunks = 2","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xor128.js\n// module id = di0+\n// module chunks = 2","/*\n * Trianglify.js\n * by @qrohlf\n *\n * Licensed under the GPLv3\n */\n\nvar Delaunator = require('delaunator');\nvar seedrandom = require('seedrandom');\nvar chroma = require('chroma-js'); //PROBLEM: chroma.js is nearly 32k in size\nvar colorbrewer = require('./colorbrewer'); //We could use the chroma.js colorbrewer, but it's got some ugly stuff so we use our own subset.\nvar _generate_points = require('./points');\n\nvar Pattern = require('./pattern');\n\nvar defaults = {\n  width: 600,                       // Width of pattern\n  height: 400,                      // Height of pattern\n  cell_size: 75,                    // Size of the cells used to generate a randomized grid\n  variance: 0.75,                   // how much to randomize the grid\n  seed: null,                       // Seed for the RNG\n  x_colors: 'random',               // X color stops\n  y_colors: 'match_x',              // Y color stops\n  palette: colorbrewer,             // Palette to use for 'random' color option\n  color_space: 'lab',               // Color space used for gradient construction & interpolation\n  color_function: null,             // Color function f(x, y) that returns a color specification that is consumable by chroma-js\n  stroke_width: 1.51,               // Width of stroke. Defaults to 1.51 to fix an issue with canvas antialiasing.\n  points: undefined                 // An Array of [x,y] coordinates to trianglulate. Defaults to undefined, and points are generated.\n};\n\n/*********************************************************\n*\n* Main function that is exported to the global namespace\n*\n**********************************************************/\n\nfunction Trianglify(opts) {\n  var rand;\n\n  // apply defaults\n  opts = _merge_opts(defaults, opts);\n\n  // setup seedable RNG\n  rand = seedrandom(opts.seed);\n\n  // randomize colors if requested\n  if (opts.x_colors === 'random') opts.x_colors = _random_from_palette();\n  if (opts.y_colors === 'random') opts.y_colors = _random_from_palette();\n  if (opts.y_colors === 'match_x') opts.y_colors = opts.x_colors;\n\n  // some sanity-checking\n  if (!(opts.width > 0 && opts.height > 0)) {\n    throw new Error(\"Width and height must be numbers greater than 0\");\n  }\n\n  if (opts.cell_size < 2) {\n    throw new Error(\"Cell size must be greater than 2.\");\n  }\n\n  if(!opts.x_colors && !opts.y_colors) {\n    throw new Error(\"X and Y colors can not be both undefined.\");\n  }\n\n  // Setup the color gradient function\n  var gradient;\n\n  if (opts.color_function) {\n    gradient = function(x, y) {\n      return chroma(opts.color_function(x, y));\n    };\n  } else {\n    // Both colors are specified: Interpolate between both.\n    if(opts.x_colors && opts.y_colors){\n      var x_color = chroma.scale(opts.x_colors).mode(opts.color_space);\n      var y_color = chroma.scale(opts.y_colors).mode(opts.color_space);\n      gradient = function(x, y) {\n        return chroma.interpolate(x_color(x), y_color(y), 0.5, opts.color_space);\n      };\n    } else {\n      // One color missing: Use only the specified one.\n      var scale = chroma\n        .scale(opts.x_colors || opts.y_colors)\n        .mode(opts.color_space);\n\n      gradient = opts.x_colors ? function(x, y) { return scale(x); }\n                               : function(x, y) { return scale(y); };\n    }\n  }\n\n  // Figure out key dimensions\n\n  // it's a pain to prefix width and height with opts all the time, so let's\n  // give them proper variables to refer to\n  var width = opts.width;\n  var height = opts.height;\n\n  // How many cells we're going to have on each axis (pad by 2 cells on each edge)\n  var cells_x = Math.floor((width + 4 * opts.cell_size) / opts.cell_size);\n  var cells_y = Math.floor((height + 4 * opts.cell_size) / opts.cell_size);\n\n  // figure out the bleed widths to center the grid\n  var bleed_x = ((cells_x * opts.cell_size) - width)/2;\n  var bleed_y = ((cells_y * opts.cell_size) - height)/2;\n\n  // how much can out points wiggle (+/-) given the cell padding?\n  var variance = opts.cell_size * opts.variance / 2;\n\n  // Set up normalizers\n  var norm_x = function(x) {\n    return _clamp(\n      _map(x, [0, width], [0, 1]),\n      [0, 1]\n    );\n  };\n\n  var norm_y = function(y) {\n    return _clamp(\n      _map(y, [0, height], [0, 1]),\n      [0, 1]\n    );\n  };\n\n  function _clamp (num, interval) {\n    return Math.min(\n      Math.max(num, interval[0]),\n      interval[1]\n    );\n  }\n\n  // generate a point mesh\n  var points = opts.points || _generate_points(width, height, bleed_x, bleed_y, opts.cell_size, variance, rand);\n\n  // delaunay.triangulate gives us indices into the original coordinate array\n  var geom_indices = (new Delaunator(points)).triangles;\n\n  // iterate over the indices in groups of three to flatten them into polygons, with color lookup\n  var triangles = [];\n  var lookup_point = function(i) { return points[i];};\n  for (var i=0; i < geom_indices.length; i += 3) {\n    var vertices = [geom_indices[i], geom_indices[i+1], geom_indices[i+2]].map(lookup_point);\n    var centroid = _centroid(vertices);\n    var color = gradient(norm_x(centroid.x), norm_y(centroid.y)).css();\n    triangles.push([color, vertices]);\n  }\n  return Pattern(triangles, opts);\n\n\n  /*********************************************************\n  *\n  * Private functions\n  *\n  **********************************************************/\n\n  function _map(num, in_range, out_range ) {\n    return ( num - in_range[0] ) * ( out_range[1] - out_range[0] ) / ( in_range[1] - in_range[0] ) + out_range[0];\n  }\n\n  //triangles only!\n  function _centroid(d) {\n    return {\n      x: (d[0][0] + d[1][0] + d[2][0])/3,\n      y: (d[0][1] + d[1][1] + d[2][1])/3\n    };\n  }\n\n  // select a random palette from colorbrewer\n  function _random_from_palette() {\n    if (opts.palette instanceof Array) {\n      return opts.palette[Math.floor(rand()*opts.palette.length)];\n    }\n\n    var keys = Object.keys(opts.palette);\n    return opts.palette[keys[Math.floor(rand()*keys.length)]];\n  }\n\n  // shallow extend (sort of) for option defaults\n  function _merge_opts(defaults, options) {\n    var out = {};\n\n    // shallow-copy defaults so we don't mutate the input objects (bad)\n    for (var key in defaults) {\n      out[key] = defaults[key];\n    }\n\n    for (key in options) {\n      if (defaults.hasOwnProperty(key)) {\n        out[key] = options[key]; // override defaults with options\n      } else {\n        throw new Error(key+\" is not a configuration option for Trianglify. Check your spelling?\");\n      }\n    }\n    return out;\n  }\n\n} //end of Trianglify function closure\n\n// exports\nTrianglify.colorbrewer = colorbrewer;\nTrianglify.defaults = defaults;\nmodule.exports = Trianglify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trianglify/lib/trianglify.js\n// module id = fzgq\n// module chunks = 2","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xorshift7.js\n// module id = fzqA\n// module chunks = 2","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/lib/xorwow.js\n// module id = i+52\n// module chunks = 2","function generate_grid(width, height, bleed_x, bleed_y, cell_size, variance, rand_fn) {\n  var w = width + bleed_x;\n  var h = height + bleed_y;\n  var half_cell_size = cell_size * 0.5;\n  var double_v = variance * 2;\n  var negative_v = -variance;\n\n  var points = [];\n  for (var i = -bleed_x; i < w; i += cell_size) {\n    for (var j = -bleed_y; j < h; j += cell_size) {\n      var x = (i + half_cell_size) + (rand_fn() * double_v + negative_v);\n      var y = (j + half_cell_size) + (rand_fn() * double_v + negative_v);\n      points.push([Math.floor(x), Math.floor(y)]);\n    }\n  }\n\n  return points;\n}\n\nmodule.exports = generate_grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trianglify/lib/points.js\n// module id = mW/o\n// module chunks = 2","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = nErl\n// module chunks = 2","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\n// Detect the global object, even if operating in strict mode.\n// http://stackoverflow.com/a/14387057/265298\nvar global = (0, eval)('this'),\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/seedrandom/seedrandom.js\n// module id = p//t\n// module chunks = 2"],"sourceRoot":""}