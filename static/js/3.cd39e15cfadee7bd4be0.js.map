{"version":3,"sources":["webpack:///./node_modules/geopattern/lib/sha1.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/geopattern/lib/pattern.js","webpack:///./node_modules/geopattern/node_modules/extend/index.js","webpack:///src/components/Geopattern.vue","webpack:///./src/components/Geopattern.vue?e1fa","webpack:///./src/components/Geopattern.vue","webpack:///./node_modules/geopattern/geopattern.js","webpack:///./node_modules/geopattern/lib/color.js","webpack:///./node_modules/geopattern/lib/xml.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/geopattern/lib/svg.js"],"names":["create","h0","h1","h2","h3","h4","block","Uint32Array","offset","shift","totalLength","processBlock","i","w","f","k","a","b","c","d","e","temp","write","byte","toHex","word","hex","toString","update","chunk","string","length","charCodeAt","updateString","digest","s","module","exports","buffer","undefined","shasum","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","fromByteArray","uint8","extraBytes","parts","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","global","base64","__webpack_require__","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","checked","copy","val","type","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","extend","color","SHA1","SVG","DEFAULTS","baseColor","PATTERNS","FILL_COLOR_DARK","FILL_COLOR_LIGHT","STROKE_COLOR","STROKE_OPACITY","OPACITY_MIN","OPACITY_MAX","hexVal","hash","index","map","vMin","vMax","dMin","dMax","parseFloat","fillColor","fillOpacity","Pattern","options","opts","svg","generateBackground","generatePattern","buildPlusShape","squareSize","buildRightTriangleShape","sideLength","drawInnerMosaicTile","triangleSize","vals","triangle","opacity","styles","stroke","stroke-opacity","fill-opacity","polyline","transform","translate","scale","drawOuterMosaicTile","toSvg","toBase64","window","btoa","toDataUri","toDataUrl","hueOffset","rgb","satOffset","hex2rgb","rgb2hsl","h","hsl2rgb","rgb2hex","rect","rgb2rgbString","generator","toUpperCase","geoHexagons","dy","hexHeight","sqrt","hexWidth","sin","PI","buildHexagonShape","setWidth","setHeight","geoSineWaves","xOffset","period","amplitude","waveWidth","stroke-width","path","geoChevrons","width","height","chevronWidth","chevronHeight","chevron","group","geoPlusSigns","dx","plusSize","plusShape","geoXes","xShape","xSize","rotate","geoOverlappingCircles","radius","circle","geoOctogons","tile","buildOctogonShape","geoSquares","geoConcentricCircles","ringSize","strokeWidth","geoOverlappingRings","geoTriangles","rotation","triangleHeight","halfWidth","buildTriangleShape","geoDiamonds","diamondWidth","diamondHeight","diamond","geoNestedSquares","blockSize","geoMosaicSquares","geoPlaid","stripeHeight","stripeWidth","geoTessellation","triangleWidth","buildRotatedTriangleShape","tileWidth","tileHeight","hasOwn","hasOwnProperty","isPlainObject","nodeType","setInterval","key","has_own_constructor","has_is_property_of_method","constructor","name","copyIsArray","clone","deep","Geopattern","css","created","pattern","geopattern_default","generate","console","log","components_Geopattern","render","_h","$createElement","_c","_self","attrs","_v","style","background","id","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","$","optArgs","cb","Date","GeoPattern","fn","geopattern","each","titleSha","attr","jQuery","r","g","result","exec","l","hsl","hue2rgb","p","q","t","round","XMLNode","tagName","attributes","children","lastChild","appendChild","child","setAttribute","self","keys","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","context","setAttributes","xmlns","currentContext","pop","currentNode","transformations","transformation","el","forEach","args","cx","cy","points"],"mappings":"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","file":"static/js/3.cd39e15cfadee7bd4be0.js","sourcesContent":["/*\nhttps://github.com/creationix/git-sha1/blob/master/git-sha1.js\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Tim Caswell\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n'use strict';\n\n// A streaming interface for when nothing is passed in.\nfunction create() {\n\n\tvar h0 = 0x67452301;\n\tvar h1 = 0xEFCDAB89;\n\tvar h2 = 0x98BADCFE;\n\tvar h3 = 0x10325476;\n\tvar h4 = 0xC3D2E1F0;\n\t// The first 64 bytes (16 words) is the data chunk\n\tvar block = new Uint32Array(80), offset = 0, shift = 24;\n\tvar totalLength = 0;\n\n\t// We have a full block to process.  Let's do it!\n\tfunction processBlock() {\n\t\t// Extend the sixteen 32-bit words into eighty 32-bit words:\n\t\tfor (var i = 16; i < 80; i++) {\n\t\t\tvar w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\n\t\t\tblock[i] = (w << 1) | (w >>> 31);\n\t\t}\n\n\t\t// log(block);\n\n\t\t// Initialize hash value for this chunk:\n\t\tvar a = h0;\n\t\tvar b = h1;\n\t\tvar c = h2;\n\t\tvar d = h3;\n\t\tvar e = h4;\n\t\tvar f, k;\n\n\t\t// Main loop:\n\t\tfor (i = 0; i < 80; i++) {\n\t\t\tif (i < 20) {\n\t\t\t\tf = d ^ (b & (c ^ d));\n\t\t\t\tk = 0x5A827999;\n\t\t\t}\n\t\t\telse if (i < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t}\n\t\t\telse if (i < 60) {\n\t\t\t\tf = (b & c) | (d & (b | c));\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\t\t\tvar temp = (a << 5 | a >>> 27) + f + e + k + (block[i] | 0);\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = (b << 30 | b >>> 2);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\t// Add this chunk's hash to result so far:\n\t\th0 = (h0 + a) | 0;\n\t\th1 = (h1 + b) | 0;\n\t\th2 = (h2 + c) | 0;\n\t\th3 = (h3 + d) | 0;\n\t\th4 = (h4 + e) | 0;\n\n\t\t// The block is now reusable.\n\t\toffset = 0;\n\t\tfor (i = 0; i < 16; i++) {\n\t\t\tblock[i] = 0;\n\t\t}\n\t}\n\n\tfunction write(byte) {\n\t\tblock[offset] |= (byte & 0xff) << shift;\n\t\tif (shift) {\n\t\t\tshift -= 8;\n\t\t}\n\t\telse {\n\t\t\toffset++;\n\t\t\tshift = 24;\n\t\t}\n\t\tif (offset === 16) {\n\t\t\tprocessBlock();\n\t\t}\n\t}\n\n\tfunction updateString(string) {\n\t\tvar length = string.length;\n\t\ttotalLength += length * 8;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\twrite(string.charCodeAt(i));\n\t\t}\n\t}\n\n\t// The user gave us more data.  Store it!\n\tfunction update(chunk) {\n\t\tif (typeof chunk === 'string') {\n\t\t\treturn updateString(chunk);\n\t\t}\n\t\tvar length = chunk.length;\n\t\ttotalLength += length * 8;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\twrite(chunk[i]);\n\t\t}\n\t}\n\n\tfunction toHex(word) {\n\t\tvar hex = '';\n\t\tfor (var i = 28; i >= 0; i -= 4) {\n\t\t\thex += ((word >> i) & 0xf).toString(16);\n\t\t}\n\t\treturn hex;\n\t}\n\n\t// No more data will come, pad the block, process and return the result.\n\tfunction digest() {\n\t\t// Pad\n\t\twrite(0x80);\n\t\tif (offset > 14 || (offset === 14 && shift < 24)) {\n\t\t\tprocessBlock();\n\t\t}\n\t\toffset = 14;\n\t\tshift = 24;\n\n\t\t// 64-bit length big-endian\n\t\twrite(0x00); // numbers this big aren't accurate in javascript anyway\n\t\twrite(0x00); // ..So just hard-code to zero.\n\t\twrite(totalLength > 0xffffffffff ? totalLength / 0x10000000000 : 0x00);\n\t\twrite(totalLength > 0xffffffff ? totalLength / 0x100000000 : 0x00);\n\t\tfor (var s = 24; s >= 0; s -= 8) {\n\t\t\twrite(totalLength >> s);\n\t\t}\n\n\t\t// At this point one last processBlock() should trigger and we can pull out the result.\n\t\treturn toHex(h0) +\n\t\ttoHex(h1) +\n\t\ttoHex(h2) +\n\t\ttoHex(h3) +\n\t\ttoHex(h4);\n\t}\n\n\treturn { update: update, digest: digest };\n}\n\n// Input chunks must be either arrays of bytes or \"raw\" encoded strings\nmodule.exports = function sha1(buffer) {\n\tif (buffer === undefined) {\n\t\treturn create();\n\t}\n\tvar shasum = create();\n\tshasum.update(buffer);\n\treturn shasum.digest();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/lib/sha1.js\n// module id = 1xLy\n// module chunks = 3","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = EKta\n// module chunks = 3","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = EuP9\n// module chunks = 3","'use strict';\n\nvar extend = require('extend');\nvar color  = require('./color');\nvar SHA1   = require('./sha1');\nvar SVG    = require('./svg');\n\n\n\nvar DEFAULTS = {\n\tbaseColor: '#933c3c'\n};\n\nvar PATTERNS = [\n\t'octogons',\n\t'overlappingCircles',\n\t'plusSigns',\n\t'xes',\n\t'sineWaves',\n\t'hexagons',\n\t'overlappingRings',\n\t'plaid',\n\t'triangles',\n\t'squares',\n\t'concentricCircles',\n\t'diamonds',\n\t'tessellation',\n\t'nestedSquares',\n\t'mosaicSquares',\n\t'chevrons'\n];\n\nvar FILL_COLOR_DARK  = '#222';\nvar FILL_COLOR_LIGHT = '#ddd';\nvar STROKE_COLOR     = '#000';\nvar STROKE_OPACITY   = 0.02;\nvar OPACITY_MIN      = 0.02;\nvar OPACITY_MAX      = 0.15;\n\n\n\n// Helpers\n\n/**\n * Extract a substring from a hex string and parse it as an integer\n * @param {string} hash - Source hex string\n * @param {number} index - Start index of substring\n * @param {number} [length] - Length of substring. Defaults to 1.\n */\nfunction hexVal(hash, index, len) {\n\treturn parseInt(hash.substr(index, len || 1), 16);\n}\n\n/*\n * Re-maps a number from one range to another\n * http://processing.org/reference/map_.html\n */\nfunction map(value, vMin, vMax, dMin, dMax) {\n\tvar vValue = parseFloat(value);\n\tvar vRange = vMax - vMin;\n\tvar dRange = dMax - dMin;\n\n\treturn (vValue - vMin) * dRange / vRange + dMin;\n}\n\nfunction fillColor(val) {\n\treturn (val % 2 === 0) ? FILL_COLOR_LIGHT : FILL_COLOR_DARK;\n}\n\nfunction fillOpacity(val) {\n\treturn map(val, 0, 15, OPACITY_MIN, OPACITY_MAX);\n}\n\n\n\nvar Pattern = module.exports = function (string, options) {\n\tthis.opts = extend({}, DEFAULTS, options);\n\tthis.hash = options.hash || SHA1(string);\n\tthis.svg = new SVG();\n\n\tthis.generateBackground();\n\tthis.generatePattern();\n\n\treturn this;\n};\n\nPattern.prototype.toSvg = function () {\n\treturn this.svg.toString();\n};\n\nPattern.prototype.toString = function () {\n\treturn this.toSvg();\n};\n\nPattern.prototype.toBase64 = function () {\n\tvar str = this.toSvg();\n\tvar b64;\n\n\t// Use window.btoa if in the browser; otherwise fallback to node buffers\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\tb64 = window.btoa(str);\n\t} else {\n\t\tb64 = new Buffer(str).toString('base64');\n\t}\n\n\treturn b64;\n};\n\nPattern.prototype.toDataUri = function () {\n\treturn 'data:image/svg+xml;base64,' + this.toBase64();\n};\n\nPattern.prototype.toDataUrl = function () {\n\treturn 'url(\"' + this.toDataUri() + '\")';\n};\n\nPattern.prototype.generateBackground = function () {\n\tvar baseColor, hueOffset, rgb, satOffset;\n\n\tif (this.opts.color) {\n\t\trgb = color.hex2rgb(this.opts.color);\n\t} else {\n\t\thueOffset = map(hexVal(this.hash, 14, 3), 0, 4095, 0, 359);\n\t\tsatOffset = hexVal(this.hash, 17);\n\t\tbaseColor = color.rgb2hsl(color.hex2rgb(this.opts.baseColor));\n\n\t\tbaseColor.h = (((baseColor.h * 360 - hueOffset) + 360) % 360) / 360;\n\n\t\tif (satOffset % 2 === 0) {\n\t\t\tbaseColor.s = Math.min(1, ((baseColor.s * 100) + satOffset) / 100);\n\t\t} else {\n\t\t\tbaseColor.s = Math.max(0, ((baseColor.s * 100) - satOffset) / 100);\n\t\t}\n\t\trgb = color.hsl2rgb(baseColor);\n\t}\n\n\tthis.color = color.rgb2hex(rgb);\n\n\tthis.svg.rect(0, 0, '100%', '100%', {\n\t\tfill: color.rgb2rgbString(rgb)\n\t});\n};\n\nPattern.prototype.generatePattern = function () {\n\tvar generator = this.opts.generator;\n\n\tif (generator) {\n\t\tif (PATTERNS.indexOf(generator) < 0) {\n\t\t\tthrow new Error('The generator '\n\t\t\t\t+ generator\n\t\t\t\t+ ' does not exist.');\n\t\t}\n\t} else {\n\t\tgenerator = PATTERNS[hexVal(this.hash, 20)];\n\t}\n\n\treturn this['geo' + generator.slice(0, 1).toUpperCase() + generator.slice(1)]();\n};\n\nfunction buildHexagonShape(sideLength) {\n\tvar c = sideLength;\n\tvar a = c / 2;\n\tvar b = Math.sin(60 * Math.PI / 180) * c;\n\treturn [\n\t\t0, b,\n\t\ta, 0,\n\t\ta + c, 0,\n\t\t2 * c, b,\n\t\ta + c, 2 * b,\n\t\ta, 2 * b,\n\t\t0, b\n\t].join(',');\n}\n\nPattern.prototype.geoHexagons = function () {\n\tvar scale      = hexVal(this.hash, 0);\n\tvar sideLength = map(scale, 0, 15, 8, 60);\n\tvar hexHeight  = sideLength * Math.sqrt(3);\n\tvar hexWidth   = sideLength * 2;\n\tvar hex        = buildHexagonShape(sideLength);\n\tvar dy, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(hexWidth * 3 + sideLength * 3);\n\tthis.svg.setHeight(hexHeight * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\tdy      = x % 2 === 0 ? y * hexHeight : y * hexHeight + hexHeight / 2;\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t};\n\n\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\tdy - hexHeight / 2\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\t\tdy - hexHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tdy = x % 2 === 0 ? 6 * hexHeight : 6 * hexHeight + hexHeight / 2;\n\t\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\t\tdy - hexHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra one at bottom-right, for tiling.\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.polyline(hex, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * sideLength * 1.5 - hexWidth / 2,\n\t\t\t\t\t\t5 * hexHeight + hexHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoSineWaves = function () {\n\tvar period    = Math.floor(map(hexVal(this.hash, 0), 0, 15, 100, 400));\n\tvar amplitude = Math.floor(map(hexVal(this.hash, 1), 0, 15, 30, 100));\n\tvar waveWidth = Math.floor(map(hexVal(this.hash, 2), 0, 15, 3, 30));\n\tvar fill, i, opacity, str, styles, val, xOffset;\n\n\tthis.svg.setWidth(period);\n\tthis.svg.setHeight(waveWidth * 36);\n\n\tfor (i = 0; i < 36; i++) {\n\t\tval     = hexVal(this.hash, i);\n\t\topacity = fillOpacity(val);\n\t\tfill    = fillColor(val);\n\t\txOffset = period / 4 * 0.7;\n\n\t\tstyles = {\n\t\t\tfill: 'none',\n\t\t\tstroke: fill,\n\t\t\topacity: opacity,\n\t\t\t'stroke-width': '' + waveWidth + 'px'\n\t\t};\n\n\t\tstr = 'M0 ' + amplitude +\n\t\t\t' C ' + xOffset + ' 0, ' + (period / 2 - xOffset) + ' 0, ' + (period / 2) + ' ' + amplitude +\n\t\t\t' S ' + (period - xOffset) + ' ' + (amplitude * 2) + ', ' + period + ' ' + amplitude +\n\t\t\t' S ' + (period * 1.5 - xOffset) + ' 0, ' + (period * 1.5) + ', ' + amplitude;\n\n\t\tthis.svg.path(str, styles).transform({\n\t\t\ttranslate: [\n\t\t\t\t-period / 4,\n\t\t\t\twaveWidth * i - amplitude * 1.5\n\t\t\t]\n\t\t});\n\t\tthis.svg.path(str, styles).transform({\n\t\t\ttranslate: [\n\t\t\t\t-period / 4,\n\t\t\t\twaveWidth * i - amplitude * 1.5 + waveWidth * 36\n\t\t\t]\n\t\t});\n\t}\n};\n\nfunction buildChevronShape(width, height) {\n\tvar e = height * 0.66;\n\treturn [\n\t\t[\n\t\t\t0, 0,\n\t\t\twidth / 2, height - e,\n\t\t\twidth / 2, height,\n\t\t\t0, e,\n\t\t\t0, 0\n\t\t],\n\t\t[\n\t\t\twidth / 2, height - e,\n\t\t\twidth, 0,\n\t\t\twidth, e,\n\t\t\twidth / 2, height,\n\t\t\twidth / 2, height - e\n\t\t]\n\t].map(function (x) { return x.join(','); });\n}\n\nPattern.prototype.geoChevrons = function () {\n\tvar chevronWidth  = map(hexVal(this.hash, 0), 0, 15, 30, 80);\n\tvar chevronHeight = map(hexVal(this.hash, 0), 0, 15, 30, 80);\n\tvar chevron       = buildChevronShape(chevronWidth, chevronHeight);\n\tvar fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(chevronWidth * 6);\n\tthis.svg.setHeight(chevronHeight * 6 * 0.66);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\t'stroke-width': 1\n\t\t\t};\n\n\t\t\tthis.svg.group(styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * chevronWidth,\n\t\t\t\t\ty * chevronHeight * 0.66 - chevronHeight / 2\n\t\t\t\t]\n\t\t\t}).polyline(chevron).end();\n\n\t\t\t// Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * chevronWidth,\n\t\t\t\t\t\t6 * chevronHeight * 0.66 - chevronHeight / 2\n\t\t\t\t\t]\n\t\t\t\t}).polyline(chevron).end();\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildPlusShape(squareSize) {\n\treturn [\n\t\t[squareSize, 0, squareSize, squareSize * 3],\n\t\t[0, squareSize, squareSize * 3, squareSize]\n\t];\n}\n\nPattern.prototype.geoPlusSigns = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 25);\n\tvar plusSize   = squareSize * 3;\n\tvar plusShape  = buildPlusShape(squareSize);\n\tvar dx, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(squareSize * 12);\n\tthis.svg.setHeight(squareSize * 12);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\t\t\tdx      = (y % 2 === 0) ? 0 : 1;\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t\t\t'fill-opacity': opacity\n\t\t\t};\n\n\t\t\tthis.svg.group(styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\ty * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t]\n\t\t\t}).rect(plusShape).end();\n\n\t\t\t// Add an extra column on the right for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t4 * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\t\ty * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(plusShape).end();\n\t\t\t}\n\n\t\t\t// Add an extra row on the bottom that matches the first row, for tiling\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\t\t4 * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(plusShape).end();\n\t\t\t}\n\n\t\t\t// Add an extra one at top-right and bottom-right, for tiling\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t4 * plusSize - x * squareSize + dx * squareSize - squareSize,\n\t\t\t\t\t\t4 * plusSize - y * squareSize - plusSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(plusShape).end();\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoXes = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 25);\n\tvar xShape     = buildPlusShape(squareSize);\n\tvar xSize      = squareSize * 3 * 0.943;\n\tvar dy, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(xSize * 3);\n\tthis.svg.setHeight(xSize * 3);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tdy      = x % 2 === 0 ? y * xSize - xSize * 0.5 : y * xSize - xSize * 0.5 + xSize / 4;\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\topacity: opacity\n\t\t\t};\n\n\t\t\tthis.svg.group(styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * xSize / 2 - xSize / 2,\n\t\t\t\t\tdy - y * xSize / 2\n\t\t\t\t],\n\t\t\t\trotate: [\n\t\t\t\t\t45,\n\t\t\t\t\txSize / 2,\n\t\t\t\t\txSize / 2\n\t\t\t\t]\n\t\t\t}).rect(xShape).end();\n\n\t\t\t// Add an extra column on the right for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - y * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\n\t\t\t// // Add an extra row on the bottom that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tdy = x % 2 === 0 ? 6 * xSize - xSize / 2 : 6 * xSize - xSize / 2 + xSize / 4;\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - 6 * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\n\t\t\t// These can hang off the bottom, so put a row at the top for tiling.\n\t\t\tif (y === 5) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - 11 * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\n\t\t\t// Add an extra one at top-right and bottom-right, for tiling\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.group(styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * xSize / 2 - xSize / 2,\n\t\t\t\t\t\tdy - 6 * xSize / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t45,\n\t\t\t\t\t\txSize / 2,\n\t\t\t\t\t\txSize / 2\n\t\t\t\t\t]\n\t\t\t\t}).rect(xShape).end();\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoOverlappingCircles = function () {\n\tvar scale    = hexVal(this.hash, 0);\n\tvar diameter = map(scale, 0, 15, 25, 200);\n\tvar radius   = diameter / 2;\n\tvar circle, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(radius * 6);\n\tthis.svg.setHeight(radius * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\topacity: opacity\n\t\t\t};\n\n\t\t\tthis.svg.circle(x * radius, y * radius, radius, styles);\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.circle(6 * radius, y * radius, radius, styles);\n\t\t\t}\n\n\t\t\t// // Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.circle(x * radius, 6 * radius, radius, styles);\n\t\t\t}\n\n\t\t\t// // Add an extra one at bottom-right, for tiling.\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.circle(6 * radius, 6 * radius, radius, styles);\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n};\n\nfunction buildOctogonShape(squareSize) {\n\tvar s = squareSize;\n\tvar c = s * 0.33;\n\treturn [\n\t\tc, 0,\n\t\ts - c, 0,\n\t\ts, c,\n\t\ts, s - c,\n\t\ts - c, s,\n\t\tc, s,\n\t\t0, s - c,\n\t\t0, c,\n\t\tc, 0\n\t].join(',');\n}\n\nPattern.prototype.geoOctogons = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 60);\n\tvar tile       = buildOctogonShape(squareSize);\n\tvar fill, i, opacity, val, x, y;\n\n\tthis.svg.setWidth(squareSize * 6);\n\tthis.svg.setHeight(squareSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.polyline(tile, {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t}).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * squareSize,\n\t\t\t\t\ty * squareSize\n\t\t\t\t]\n\t\t\t});\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoSquares = function () {\n\tvar squareSize = map(hexVal(this.hash, 0), 0, 15, 10, 60);\n\tvar fill, i, opacity, val, x, y;\n\n\tthis.svg.setWidth(squareSize * 6);\n\tthis.svg.setHeight(squareSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.rect(x * squareSize, y * squareSize, squareSize, squareSize, {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t});\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoConcentricCircles = function () {\n\tvar scale       = hexVal(this.hash, 0);\n\tvar ringSize    = map(scale, 0, 15, 10, 60);\n\tvar strokeWidth = ringSize / 5;\n\tvar fill, i, opacity, val, x, y;\n\n\tthis.svg.setWidth((ringSize + strokeWidth) * 6);\n\tthis.svg.setHeight((ringSize + strokeWidth) * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.circle(\n\t\t\t\tx * ringSize + x * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\ty * ringSize + y * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\tringSize / 2,\n\t\t\t\t{\n\t\t\t\t\tfill: 'none',\n\t\t\t\t\tstroke: fill,\n\t\t\t\t\topacity: opacity,\n\t\t\t\t\t'stroke-width': strokeWidth + 'px'\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tval     = hexVal(this.hash, 39 - i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tthis.svg.circle(\n\t\t\t\tx * ringSize + x * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\ty * ringSize + y * strokeWidth + (ringSize + strokeWidth) / 2,\n\t\t\t\tringSize / 4,\n\t\t\t\t{\n\t\t\t\t\tfill: fill,\n\t\t\t\t\t'fill-opacity': opacity\n\t\t\t\t}\n\t\t\t);\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoOverlappingRings = function () {\n\tvar scale       = hexVal(this.hash, 0);\n\tvar ringSize    = map(scale, 0, 15, 10, 60);\n\tvar strokeWidth = ringSize / 4;\n\tvar fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(ringSize * 6);\n\tthis.svg.setHeight(ringSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: fill,\n\t\t\t\topacity: opacity,\n\t\t\t\t'stroke-width': strokeWidth + 'px'\n\t\t\t};\n\n\t\t\tthis.svg.circle(x * ringSize, y * ringSize, ringSize - strokeWidth / 2, styles);\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.circle(6 * ringSize, y * ringSize, ringSize - strokeWidth / 2, styles);\n\t\t\t}\n\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.circle(x * ringSize, 6 * ringSize, ringSize - strokeWidth / 2, styles);\n\t\t\t}\n\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.circle(6 * ringSize, 6 * ringSize, ringSize - strokeWidth / 2, styles);\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildTriangleShape(sideLength, height) {\n\tvar halfWidth = sideLength / 2;\n\treturn [\n\t\thalfWidth, 0,\n\t\tsideLength, height,\n\t\t0, height,\n\t\thalfWidth, 0\n\t].join(',');\n}\n\nPattern.prototype.geoTriangles = function () {\n\tvar scale          = hexVal(this.hash, 0);\n\tvar sideLength     = map(scale, 0, 15, 15, 80);\n\tvar triangleHeight = sideLength / 2 * Math.sqrt(3);\n\tvar triangle       = buildTriangleShape(sideLength, triangleHeight);\n\tvar fill, i, opacity, rotation, styles, val, x, y;\n\n\tthis.svg.setWidth(sideLength * 3);\n\tthis.svg.setHeight(triangleHeight * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t};\n\n\t\t\tif (y % 2 === 0) {\n\t\t\t\trotation = x % 2 === 0 ? 180 : 0;\n\t\t\t} else {\n\t\t\t\trotation = x % 2 !== 0 ? 180 : 0;\n\t\t\t}\n\n\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * sideLength * 0.5 - sideLength / 2,\n\t\t\t\t\ttriangleHeight * y\n\t\t\t\t],\n\t\t\t\trotate: [\n\t\t\t\t\trotation,\n\t\t\t\t\tsideLength / 2,\n\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * sideLength * 0.5 - sideLength / 2,\n\t\t\t\t\t\ttriangleHeight * y\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildDiamondShape(width, height) {\n\treturn [\n\t\twidth / 2, 0,\n\t\twidth, height / 2,\n\t\twidth / 2, height,\n\t\t0, height / 2\n\t].join(',');\n}\n\nPattern.prototype.geoDiamonds = function () {\n\tvar diamondWidth  = map(hexVal(this.hash, 0), 0, 15, 10, 50);\n\tvar diamondHeight = map(hexVal(this.hash, 1), 0, 15, 10, 50);\n\tvar diamond       = buildDiamondShape(diamondWidth, diamondHeight);\n\tvar dx, fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth(diamondWidth * 6);\n\tthis.svg.setHeight(diamondHeight * 3);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: fill,\n\t\t\t\t'fill-opacity': opacity,\n\t\t\t\tstroke: STROKE_COLOR,\n\t\t\t\t'stroke-opacity': STROKE_OPACITY\n\t\t\t};\n\n\t\t\tdx = (y % 2 === 0) ? 0 : diamondWidth / 2;\n\n\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\ttranslate: [\n\t\t\t\t\tx * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\tdiamondHeight / 2 * y - diamondHeight / 2\n\t\t\t\t]\n\t\t\t});\n\n\t\t\t// Add an extra one at top-right, for tiling.\n\t\t\tif (x === 0) {\n\t\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\t\tdiamondHeight / 2 * y - diamondHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra row at the end that matches the first row, for tiling.\n\t\t\tif (y === 0) {\n\t\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tx * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\t\tdiamondHeight / 2 * 6 - diamondHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add an extra one at bottom-right, for tiling.\n\t\t\tif (x === 0 && y === 0) {\n\t\t\t\tthis.svg.polyline(diamond, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t6 * diamondWidth - diamondWidth / 2 + dx,\n\t\t\t\t\t\tdiamondHeight / 2 * 6 - diamondHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoNestedSquares = function () {\n\tvar blockSize  = map(hexVal(this.hash, 0), 0, 15, 4, 12);\n\tvar squareSize = blockSize * 7;\n\tvar fill, i, opacity, styles, val, x, y;\n\n\tthis.svg.setWidth((squareSize + blockSize) * 6 + blockSize * 6);\n\tthis.svg.setHeight((squareSize + blockSize) * 6 + blockSize * 6);\n\n\ti = 0;\n\tfor (y = 0; y < 6; y++) {\n\t\tfor (x = 0; x < 6; x++) {\n\t\t\tval     = hexVal(this.hash, i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: fill,\n\t\t\t\topacity: opacity,\n\t\t\t\t'stroke-width': blockSize + 'px'\n\t\t\t};\n\n\t\t\tthis.svg.rect(x * squareSize + x * blockSize * 2 + blockSize / 2,\n\t\t\t              y * squareSize + y * blockSize * 2 + blockSize / 2,\n\t\t\t              squareSize, squareSize, styles);\n\n\t\t\tval     = hexVal(this.hash, 39 - i);\n\t\t\topacity = fillOpacity(val);\n\t\t\tfill    = fillColor(val);\n\n\t\t\tstyles = {\n\t\t\t\tfill: 'none',\n\t\t\t\tstroke: fill,\n\t\t\t\topacity: opacity,\n\t\t\t\t'stroke-width': blockSize + 'px'\n\t\t\t};\n\n\t\t\tthis.svg.rect(x * squareSize + x * blockSize * 2 + blockSize / 2 + blockSize * 2,\n\t\t\t              y * squareSize + y * blockSize * 2 + blockSize / 2 + blockSize * 2,\n\t\t\t              blockSize * 3, blockSize * 3, styles);\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nfunction buildRightTriangleShape(sideLength) {\n\treturn [\n\t\t0, 0,\n\t\tsideLength, sideLength,\n\t\t0, sideLength,\n\t\t0, 0\n\t].join(',');\n}\n\nfunction drawInnerMosaicTile(svg, x, y, triangleSize, vals) {\n\tvar triangle = buildRightTriangleShape(triangleSize);\n\tvar opacity  = fillOpacity(vals[0]);\n\tvar fill     = fillColor(vals[0]);\n\tvar styles   = {\n\t\tstroke: STROKE_COLOR,\n\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t'fill-opacity': opacity,\n\t\tfill: fill\n\t};\n\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty\n\t\t],\n\t\tscale: [-1, 1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty + triangleSize * 2\n\t\t],\n\t\tscale: [1, -1]\n\t});\n\n\topacity = fillOpacity(vals[1]);\n\tfill    = fillColor(vals[1]);\n\tstyles  = {\n\t\tstroke: STROKE_COLOR,\n\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t'fill-opacity': opacity,\n\t\tfill: fill\n\t};\n\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty + triangleSize * 2\n\t\t],\n\t\tscale: [-1, -1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize,\n\t\t\ty\n\t\t],\n\t\tscale: [1, 1]\n\t});\n}\n\nfunction drawOuterMosaicTile(svg, x, y, triangleSize, val) {\n\tvar opacity  = fillOpacity(val);\n\tvar fill     = fillColor(val);\n\tvar triangle = buildRightTriangleShape(triangleSize);\n\tvar styles   = {\n\t\tstroke: STROKE_COLOR,\n\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t'fill-opacity': opacity,\n\t\tfill: fill\n\t};\n\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [1, -1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize * 2,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [-1, -1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [1, 1]\n\t});\n\tsvg.polyline(triangle, styles).transform({\n\t\ttranslate: [\n\t\t\tx + triangleSize * 2,\n\t\t\ty + triangleSize\n\t\t],\n\t\tscale: [-1, 1]\n\t});\n}\n\nPattern.prototype.geoMosaicSquares = function () {\n\tvar triangleSize = map(hexVal(this.hash, 0), 0, 15, 15, 50);\n\tvar i, x, y;\n\n\tthis.svg.setWidth(triangleSize * 8);\n\tthis.svg.setHeight(triangleSize * 8);\n\n\ti = 0;\n\tfor (y = 0; y < 4; y++) {\n\t\tfor (x = 0; x < 4; x++) {\n\t\t\tif (x % 2 === 0) {\n\t\t\t\tif (y % 2 === 0) {\n\t\t\t\t\tdrawOuterMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\thexVal(this.hash, i)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdrawInnerMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\t[hexVal(this.hash, i), hexVal(this.hash, i + 1)]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (y % 2 === 0) {\n\t\t\t\t\tdrawInnerMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\t[hexVal(this.hash, i), hexVal(this.hash, i + 1)]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdrawOuterMosaicTile(this.svg,\n\t\t\t\t\t\tx * triangleSize * 2,\n\t\t\t\t\t\ty * triangleSize * 2,\n\t\t\t\t\t\ttriangleSize,\n\t\t\t\t\t\thexVal(this.hash, i)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti += 1;\n\t\t}\n\t}\n};\n\nPattern.prototype.geoPlaid = function () {\n\tvar height = 0;\n\tvar width  = 0;\n\tvar fill, i, opacity, space, stripeHeight, stripeWidth, val;\n\n\t// Horizontal stripes\n\ti = 0;\n\twhile (i < 36) {\n\t\tspace   = hexVal(this.hash, i);\n\t\theight += space + 5;\n\n\t\tval          = hexVal(this.hash, i + 1);\n\t\topacity      = fillOpacity(val);\n\t\tfill         = fillColor(val);\n\t\tstripeHeight = val + 5;\n\n\t\tthis.svg.rect(0, height, '100%', stripeHeight, {\n\t\t\topacity: opacity,\n\t\t\tfill: fill\n\t\t});\n\n\t\theight += stripeHeight;\n\t\ti += 2;\n\t}\n\n\t// Vertical stripes\n\ti = 0;\n\twhile (i < 36) {\n\t\tspace  = hexVal(this.hash, i);\n\t\twidth += space + 5;\n\n\t\tval         = hexVal(this.hash, i + 1);\n\t\topacity     = fillOpacity(val);\n\t\tfill        = fillColor(val);\n\t\tstripeWidth = val + 5;\n\n\t\tthis.svg.rect(width, 0, stripeWidth, '100%', {\n\t\t\topacity: opacity,\n\t\t\tfill: fill\n\t\t});\n\n\t\twidth += stripeWidth;\n\t\ti += 2;\n\t}\n\n\tthis.svg.setWidth(width);\n\tthis.svg.setHeight(height);\n};\n\nfunction buildRotatedTriangleShape(sideLength, triangleWidth) {\n\tvar halfHeight = sideLength / 2;\n\treturn [\n\t\t0, 0,\n\t\ttriangleWidth, halfHeight,\n\t\t0, sideLength,\n\t\t0, 0\n\t].join(',');\n}\n\nPattern.prototype.geoTessellation = function () {\n\t// 3.4.6.4 semi-regular tessellation\n\tvar sideLength     = map(hexVal(this.hash, 0), 0, 15, 5, 40);\n\tvar hexHeight      = sideLength * Math.sqrt(3);\n\tvar hexWidth       = sideLength * 2;\n\tvar triangleHeight = sideLength / 2 * Math.sqrt(3);\n\tvar triangle       = buildRotatedTriangleShape(sideLength, triangleHeight);\n\tvar tileWidth      = sideLength * 3 + triangleHeight * 2;\n\tvar tileHeight     = (hexHeight * 2) + (sideLength * 2);\n\tvar fill, i, opacity, styles, val;\n\n\tthis.svg.setWidth(tileWidth);\n\tthis.svg.setHeight(tileHeight);\n\n\tfor (i = 0; i < 20; i++) {\n\t\tval     = hexVal(this.hash, i);\n\t\topacity = fillOpacity(val);\n\t\tfill    = fillColor(val);\n\n\t\tstyles  = {\n\t\t\tstroke: STROKE_COLOR,\n\t\t\t'stroke-opacity': STROKE_OPACITY,\n\t\t\tfill: fill,\n\t\t\t'fill-opacity': opacity,\n\t\t\t'stroke-width': 1\n\t\t};\n\n\t\tswitch (i) {\n\t\t\tcase 0: // All 4 corners\n\t\t\t\tthis.svg.rect(-sideLength / 2, -sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(tileWidth - sideLength / 2, -sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(-sideLength / 2, tileHeight - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(tileWidth - sideLength / 2, tileHeight - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 1: // Center / top square\n\t\t\t\tthis.svg.rect(hexWidth / 2 + triangleHeight, hexHeight / 2, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 2: // Side squares\n\t\t\t\tthis.svg.rect(-sideLength / 2, tileHeight / 2 - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tthis.svg.rect(tileWidth - sideLength / 2, tileHeight / 2 - sideLength / 2, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 3: // Center / bottom square\n\t\t\t\tthis.svg.rect(hexWidth / 2 + triangleHeight, hexHeight * 1.5 + sideLength, sideLength, sideLength, styles);\n\t\t\t\tbreak;\n\t\t\tcase 4: // Left top / bottom triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\t-sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttileHeight - -sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 5: // Right top / bottom triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - sideLength / 2,\n\t\t\t\t\t\t-sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, 1]\n\t\t\t\t});\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - sideLength / 2,\n\t\t\t\t\t\ttileHeight + sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttriangleHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 6: // Center / top / right triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth / 2 + sideLength / 2,\n\t\t\t\t\t\thexHeight / 2\n\t\t\t\t\t]});\n\t\t\t\tbreak;\n\t\t\tcase 7: // Center / top / left triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - tileWidth / 2 - sideLength / 2,\n\t\t\t\t\t\thexHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, 1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 8: // Center / bottom / right triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth / 2 + sideLength / 2,\n\t\t\t\t\t\ttileHeight - hexHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 9: // Center / bottom / left triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - tileWidth / 2 - sideLength / 2,\n\t\t\t\t\t\ttileHeight - hexHeight / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, -1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 10: // Left / middle triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 11: // Right // middle triangle\n\t\t\t\tthis.svg.polyline(triangle, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\ttileWidth - sideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\tscale: [-1, 1]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 12: // Left / top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\ttranslate: [sideLength / 2, sideLength / 2],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 13: // Right / top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, 1],\n\t\t\t\t\ttranslate: [-tileWidth + sideLength / 2, sideLength / 2],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 14: // Left / center-top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2 - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 15: // Right / center-top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, 1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t-tileWidth + sideLength / 2,\n\t\t\t\t\t\ttileHeight / 2 - sideLength / 2  - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 16: // Left / center-top square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\t-tileHeight + tileHeight / 2 - sideLength / 2 - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 17: // Right / center-bottom square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t-tileWidth + sideLength / 2,\n\t\t\t\t\t\t-tileHeight + tileHeight / 2 - sideLength / 2 - sideLength\n\t\t\t\t\t],\n\t\t\t\t\trotate: [30, 0, sideLength]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 18: // Left / bottom square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\tsideLength / 2,\n\t\t\t\t\t\t-tileHeight + sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 19: // Right / bottom square\n\t\t\t\tthis.svg.rect(0, 0, sideLength, sideLength, styles).transform({\n\t\t\t\t\tscale: [-1, -1],\n\t\t\t\t\ttranslate: [\n\t\t\t\t\t\t-tileWidth + sideLength / 2,\n\t\t\t\t\t\t-tileHeight + sideLength / 2\n\t\t\t\t\t],\n\t\t\t\t\trotate: [-30, 0, 0]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/lib/pattern.js\n// module id = H0hc\n// module chunks = 3","var hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nfunction isPlainObject(obj) {\n\tif (!obj || toString.call(obj) !== '[object Object]' || obj.nodeType || obj.setInterval)\n\t\treturn false;\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method)\n\t\treturn false;\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor ( key in obj ) {}\n\n\treturn key === undefined || hasOwn.call( obj, key );\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t    target = arguments[0] || {},\n\t    i = 1,\n\t    length = arguments.length,\n\t    deep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && typeof target !== \"function\") {\n\t\ttarget = {};\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( isPlainObject(copy) || (copyIsArray = Array.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/node_modules/extend/index.js\n// module id = NaYo\n// module chunks = 3","<template>\n  <div>\n    <img :src=\"data\">\n    <div id=\"url\" :style=\"{'background':css}\">\n      11111\n    </div>\n  </div>\n</template>\n\n<script>\n  import GeoPattern from 'geopattern'\n  export default {\n    data(){\n      return {\n        data:null,\n        css:null,\n      }\n    },\n    created(){\n      const pattern = GeoPattern.generate('lock');\n      this.css = pattern.toDataUrl()\n      this.data = pattern.toDataUri()\n      console.log(pattern.toBase64())\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Geopattern.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('img',{attrs:{\"src\":_vm.data}}),_vm._v(\" \"),_c('div',{style:({'background':_vm.css}),attrs:{\"id\":\"url\"}},[_vm._v(\"\\n    11111\\n  \")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e84bd7b8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Geopattern.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e84bd7b8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Geopattern.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Geopattern.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Geopattern.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e84bd7b8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Geopattern.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e84bd7b8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Geopattern.vue\n// module id = null\n// module chunks = ","(function ($) {\n\n'use strict';\n\nvar Pattern = require('./lib/pattern');\n\n/*\n * Normalize arguments, if not given, to:\n * string: (new Date()).toString()\n * options: {}\n */\nfunction optArgs(cb) {\n\treturn function (string, options) {\n\t\tif (typeof string === 'object') {\n\t\t\toptions = string;\n\t\t\tstring = null;\n\t\t}\n\t\tif (string === null || string === undefined) {\n\t\t\tstring = (new Date()).toString();\n\t\t}\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\treturn cb.call(this, string, options);\n\t};\n}\n\nvar GeoPattern = module.exports = {\n\tgenerate: optArgs(function (string, options) {\n\t\treturn new Pattern(string, options);\n\t})\n};\n\nif ($) {\n\n\t// If jQuery, add plugin\n\t$.fn.geopattern = optArgs(function (string, options) {\n\t\treturn this.each(function () {\n\t\t\tvar titleSha = $(this).attr('data-title-sha');\n\t\t\tif (titleSha) {\n\t\t\t\toptions = $.extend({\n\t\t\t\t\thash: titleSha\n\t\t\t\t}, options);\n\t\t\t}\n\t\t\tvar pattern = GeoPattern.generate(string, options);\n\t\t\t$(this).css('background-image', pattern.toDataUrl());\n\t\t});\n\t});\n\n}\n\n}(typeof jQuery !== 'undefined' ? jQuery : null));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/geopattern.js\n// module id = eY3q\n// module chunks = 3","/*eslint sort-vars:0, curly:0*/\n\n'use strict';\n\n/**\n * Converts a hex CSS color value to RGB.\n * Adapted from http://stackoverflow.com/a/5624139.\n *\n * @param\tString\thex\t\tThe hexadecimal color value\n * @return\tObject\t\t\tThe RGB representation\n */\nfunction hex2rgb(hex) {\n\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\thex = hex.replace(shorthandRegex, function (m, r, g, b) {\n\t\treturn r + r + g + g + b + b;\n\t});\n\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result ? {\n\t\tr: parseInt(result[1], 16),\n\t\tg: parseInt(result[2], 16),\n\t\tb: parseInt(result[3], 16)\n\t} : null;\n}\n\n/**\n * Converts an RGB color value to a hex string.\n * @param  Object rgb RGB as r, g, and b keys\n * @return String     Hex color string\n */\nfunction rgb2hex(rgb) {\n\treturn '#' + ['r', 'g', 'b'].map(function (key) {\n\t\treturn ('0' + rgb[key].toString(16)).slice(-2);\n\t}).join('');\n}\n\n/**\n * Converts an RGB color value to HSL. Conversion formula adapted from\n * http://en.wikipedia.org/wiki/HSL_color_space. This function adapted\n * from http://stackoverflow.com/a/9493060.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Object  rgb     RGB as r, g, and b keys\n * @return  Object          HSL as h, s, and l keys\n */\nfunction rgb2hsl(rgb) {\n\tvar r = rgb.r, g = rgb.g, b = rgb.b;\n\tr /= 255; g /= 255; b /= 255;\n\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\tvar h, s, l = (max + min) / 2;\n\n\tif (max === min) {\n\t\th = s = 0; // achromatic\n\t} else {\n\t\tvar d = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\tswitch (max) {\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t}\n\t\th /= 6;\n\t}\n\n\treturn { h: h, s: s, l: l };\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula adapted from\n * http://en.wikipedia.org/wiki/HSL_color_space. This function adapted\n * from http://stackoverflow.com/a/9493060.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Object  hsl     HSL as h, s, and l keys\n * @return  Object          RGB as r, g, and b values\n */\nfunction hsl2rgb(hsl) {\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tvar h = hsl.h, s = hsl.s, l = hsl.l;\n\tvar r, g, b;\n\n\tif(s === 0){\n\t\tr = g = b = l; // achromatic\n\t}else{\n\n\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tvar p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn {\n\t\tr: Math.round(r * 255),\n\t\tg: Math.round(g * 255),\n\t\tb: Math.round(b * 255)\n\t};\n}\n\nmodule.exports = {\n\thex2rgb: hex2rgb,\n\trgb2hex: rgb2hex,\n\trgb2hsl: rgb2hsl,\n\thsl2rgb: hsl2rgb,\n\trgb2rgbString: function (rgb) {\n\t\treturn 'rgb(' + [rgb.r, rgb.g, rgb.b].join(',') + ')';\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/lib/color.js\n// module id = idM7\n// module chunks = 3","'use strict';\n\nvar XMLNode = module.exports = function (tagName) {\n\tif (!(this instanceof XMLNode)) {\n\t\treturn new XMLNode(tagName);\n\t}\n\n\tthis.tagName = tagName;\n\tthis.attributes = Object.create(null);\n\tthis.children = [];\n\tthis.lastChild = null;\n\n\treturn this;\n};\n\nXMLNode.prototype.appendChild = function (child) {\n\tthis.children.push(child);\n\tthis.lastChild = child;\n\n\treturn this;\n};\n\nXMLNode.prototype.setAttribute = function (name, value) {\n\tthis.attributes[name] = value;\n\n\treturn this;\n};\n\nXMLNode.prototype.toString = function () {\n\tvar self = this;\n\n\treturn [\n\t\t'<',\n\t\tself.tagName,\n\t\tObject.keys(self.attributes).map(function (attr) {\n\t\t\treturn [\n\t\t\t\t' ',\n\t\t\t\tattr,\n\t\t\t\t'=\"',\n\t\t\t\tself.attributes[attr],\n\t\t\t\t'\"'\n\t\t\t].join('');\n\t\t}).join(''),\n\t\t'>',\n\t\tself.children.map(function (child) {\n\t\t\treturn child.toString();\n\t\t}).join(''),\n\t\t'</',\n\t\tself.tagName,\n\t\t'>'\n\t].join('');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/lib/xml.js\n// module id = qc+n\n// module chunks = 3","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = sOR5\n// module chunks = 3","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = ujcs\n// module chunks = 3","'use strict';\n\nvar extend = require('extend');\nvar XMLNode = require('./xml');\n\nfunction SVG() {\n\tthis.width = 100;\n\tthis.height = 100;\n\tthis.svg = XMLNode('svg');\n\tthis.context = []; // Track nested nodes\n\tthis.setAttributes(this.svg, {\n\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\twidth: this.width,\n\t\theight: this.height\n\t});\n\n\treturn this;\n}\n\nmodule.exports = SVG;\n\n// This is a hack so groups work.\nSVG.prototype.currentContext = function () {\n\treturn this.context[this.context.length - 1] || this.svg;\n};\n\n// This is a hack so groups work.\nSVG.prototype.end = function () {\n\tthis.context.pop();\n\treturn this;\n};\n\nSVG.prototype.currentNode = function () {\n\tvar context = this.currentContext();\n\treturn context.lastChild || context;\n};\n\nSVG.prototype.transform = function (transformations) {\n\tthis.currentNode().setAttribute('transform',\n\t\tObject.keys(transformations).map(function (transformation) {\n\t\t\treturn transformation + '(' + transformations[transformation].join(',') + ')';\n\t\t}).join(' ')\n\t);\n\treturn this;\n};\n\nSVG.prototype.setAttributes = function (el, attrs) {\n\tObject.keys(attrs).forEach(function (attr) {\n\t\tel.setAttribute(attr, attrs[attr]);\n\t});\n};\n\nSVG.prototype.setWidth = function (width) {\n\tthis.svg.setAttribute('width', Math.floor(width));\n};\n\nSVG.prototype.setHeight = function (height) {\n\tthis.svg.setAttribute('height', Math.floor(height));\n};\n\nSVG.prototype.toString = function () {\n\treturn this.svg.toString();\n};\n\nSVG.prototype.rect = function (x, y, width, height, args) {\n\t// Accept array first argument\n\tvar self = this;\n\tif (Array.isArray(x)) {\n\t\tx.forEach(function (a) {\n\t\t\tself.rect.apply(self, a.concat(args));\n\t\t});\n\t\treturn this;\n\t}\n\n\tvar rect = XMLNode('rect');\n\tthis.currentContext().appendChild(rect);\n\tthis.setAttributes(rect, extend({\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t}, args));\n\n\treturn this;\n};\n\nSVG.prototype.circle = function (cx, cy, r, args) {\n\tvar circle = XMLNode('circle');\n\tthis.currentContext().appendChild(circle);\n\tthis.setAttributes(circle, extend({\n\t\tcx: cx,\n\t\tcy: cy,\n\t\tr: r\n\t}, args));\n\n\treturn this;\n};\n\nSVG.prototype.path = function (str, args) {\n\tvar path = XMLNode('path');\n\tthis.currentContext().appendChild(path);\n\tthis.setAttributes(path, extend({\n\t\td: str\n\t}, args));\n\n\treturn this;\n};\n\nSVG.prototype.polyline = function (str, args) {\n\t// Accept array first argument\n\tvar self = this;\n\tif (Array.isArray(str)) {\n\t\tstr.forEach(function (s) {\n\t\t\tself.polyline(s, args);\n\t\t});\n\t\treturn this;\n\t}\n\n\tvar polyline = XMLNode('polyline');\n\tthis.currentContext().appendChild(polyline);\n\tthis.setAttributes(polyline, extend({\n\t\tpoints: str\n\t}, args));\n\n\treturn this;\n};\n\n// group and context are hacks\nSVG.prototype.group = function (args) {\n\tvar group = XMLNode('g');\n\tthis.currentContext().appendChild(group);\n\tthis.context.push(group);\n\tthis.setAttributes(group, extend({}, args));\n\treturn this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geopattern/lib/svg.js\n// module id = ypGE\n// module chunks = 3"],"sourceRoot":""}