{"version":3,"sources":["webpack:///./node_modules/notification-koro1/src/util.js","webpack:///./node_modules/notification-koro1/src/main.js","webpack:///src/components/Notification.vue","webpack:///./src/components/Notification.vue?1390","webpack:///./src/components/Notification.vue"],"names":["util","checkData","type","data","Object","prototype","toString","call","searchArrObj","arr","key","value","findIndex","item","main","[object Object]","title","options","this","support","supportFn","window","Notification","initStatus","notification","state","permission","msg","callBackObj","notificationAll","requireInteractionTimeout","timeout","userSelectFn","checkStatus","console","error","requestPermissionResult","requestPermission","then","err","notificationWatch","e","push","requireInteraction","everyTimeout","autoClose","watchClose","timeOut","timeoutCloseFn","timestamp","setTimeout","index","close","addEventListener","index2","splice","callObj","values","warn","components_Notification","name","notificationClass","showNatification","methods","_this","initNotification","userAgreed","mounted","dir","body","notificationEvent","onclick","log","open","onshow","onerror","onclose","selectortype_template_index_0_src_components_Notification","render","_h","$createElement","_c","_self","staticClass","on","click","_v","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/19.3a4d426c308a288a5063.js","sourcesContent":["// 检查数据格式\nconst checkData = (type, data) => {\n  if (!type || !data) return false;\n  if (type === 'String') {\n    return typeof data === 'string'\n  } else if (type === 'Object') {\n    return Object.prototype.toString.call(data) === '[object Object]'\n  } else if (type === 'number') {\n    return typeof data === 'number'\n  } else if (type === 'function') {\n    return Object.prototype.toString.call(data) === '[object Function]'\n  } else {\n    return false;\n  }\n};\n\n// 搜索数组对象\nconst searchArrObj = (arr, key, value) => {\n  return arr.findIndex(item => {\n    return item[key] === value;\n  });\n};\nexport default { checkData, searchArrObj };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/notification-koro1/src/util.js\n// module id = null\n// module chunks = ","/*\n * @Author: OBKoro1\n * @Github: https://github.com/OBKoro1\n * @Date: 2019-01-23 19:50:26\n * @LastEditors: OBKoro1\n * @LastEditTime: 2019-02-18 18:50:04\n * @Description: html5 notification(桌面通知)\n */\n\nimport util from './util.js';\n\nclass notification {\n  constructor(title = '默认标题', options = {}) {\n    this.title = title;\n    this.options = options;\n    this.support = false; // 浏览器是否支持\n    this.supportFn();\n  }\n\n  supportFn() {\n    if (!window.Notification) {\n      // 浏览器版本,不支持桌面通知\n      this.support = false;\n    } else {\n      this.initStatus();\n      this.support = true;\n    }\n  }\n\n  initStatus() {\n    this.notification = null; // API返回值\n    this.state = Notification.permission; // 用户权限状态\n    this.msg = null; // 用户具体状态\n    this.callBackObj = {}; // 回调事件集合\n    this.notificationAll = []; // 所有通知\n    this.requireInteractionTimeout = false; // 设每个通知是否间隔一段时间关闭\n    this.timeout = null; // 多久之后关闭\n  }\n\n  /**\n   * @description: 通知权限验证与权限请求\n   * @param {Function} userSelectFn 回调\n   */\n  initNotification(userSelectFn) {\n    if (!this.checkStatus('support')) return;\n    if (!util.checkData('function', userSelectFn))\n      return console.error('initNotification的参数必须为函数');\n    if (this.state === 'granted') {\n      // 用户已经同意过\n      this.msg = 'already granted';\n    } else if (this.state === 'default') {\n      // 用户还未选择，可以询问用户是否同意发送通知\n      const requestPermissionResult = permission => {\n        this.state = permission;\n        // 如果用户同意，就可以向他们发送通知\n        if (permission === 'granted') {\n          // 用户同意\n          this.msg = 'granted';\n        } else if (permission === 'default') {\n          this.msg = 'close';\n        } else {\n          // 通知请求被用户拒绝\n          this.msg = 'denied';\n        }\n        return userSelectFn(this.msg);\n      };\n      try {\n        Notification.requestPermission().then(requestPermissionResult);\n      } catch (err) {\n        Notification.requestPermission(requestPermissionResult);\n      }\n    } else {\n      // 用户已经拒绝过了\n      this.msg = 'already denied';\n    }\n    if (this.state !== 'default') return userSelectFn(this.msg);\n  }\n\n  // 用户同意 调用通知\n  userAgreed() {\n    if (!this.checkStatus('userAgreed')) return;\n    this.notification = new Notification(this.title, this.options);\n    this.notificationWatch();\n    // 执行保存的所有回调\n    for (const key in this.callBackObj) {\n      this.notification[key] = e => {\n        this.callBackObj[key](e); // 执行回调\n      };\n    }\n  }\n\n  /**\n   * @description: 设置不自动关闭几秒后关闭\n   * @param {Number} timeout 多久后关闭\n   */\n  notificationTimeoutFn(timeout) {\n    if (timeout && util.checkData('number', timeout)) {\n      this.timeout = timeout; // 设置默认几秒后关闭,如果没有\n    } else {\n      this.timeout = 5000;\n    }\n  }\n\n  // 通知不自动关闭监听\n  notificationWatch() {\n    this.notificationAll.push(this.notification); // 保存不自动关闭的通知\n    if (this.notification.requireInteraction) {\n      this.everyTimeout();\n    } else {\n      this.autoClose();\n    }\n    this.watchClose();\n  }\n\n  // 每个通知是否间隔一段时间关闭\n  everyTimeout() {\n    if (!util.checkData('number', this.timeout)) return;\n    if (this.options.timeOut && util.checkData('number', this.options.timeOut)) {\n      this.timeoutCloseFn(this.options.timeOut);\n    } else {\n      this.timeoutCloseFn(this.timeout);\n    }\n  }\n\n  // 不自动关闭的通知 一段时间后关闭\n  timeoutCloseFn(timeOut) {\n    const value = this.notification.timestamp;\n    setTimeout(() => {\n      const index = util.searchArrObj(this.notificationAll, 'timestamp', value);\n      if (index === -1) return;\n      this.notificationAll[index].close();\n    }, timeOut);\n  }\n\n  // 监听通知关闭 移除通知数组的元素\n  watchClose() {\n    const value = this.notification.timestamp;\n    this.notification.addEventListener('close', e => {\n      const index2 = util.searchArrObj(this.notificationAll, 'timestamp', value);\n      if (index2 !== -1) this.notificationAll.splice(index2, 1);\n    });\n  }\n\n  // 自动关闭的通知 在几秒后自动在数组中删除\n  autoClose() {\n    const value = this.notification.timestamp;\n    setTimeout(() => {\n      const index = util.searchArrObj(this.notificationAll, 'timestamp', value);\n      if (index !== -1) this.notificationAll.splice(index, 1);\n    }, 6000);\n  }\n\n  // 通知回调\n  notificationEvent(callObj) {\n    if (!this.checkStatus('support')) return;\n    if (util.checkData('Object', callObj)) {\n      for (const key in callObj) {\n        if (!util.checkData('function', callObj[key])) {\n          return console.error('callObj对象中的每个value必须为函数');\n        }\n      }\n      this.callBackObj = callObj;\n    } else {\n      return console.error('callObj必须为对象');\n    }\n  }\n\n  // 关闭所有通知\n  closeAll() {\n    for (let item of this.notificationAll.values()) {\n      item.close();\n    }\n    this.notificationAll = [];\n  }\n\n  // 关闭当前通知\n  close() {\n    if (!this.notification) {\n      return console.warn('this.notification为null,通知尚未调用/用户未同意显示通知');\n    }\n    this.notification.close();\n  }\n\n  /**\n   * @description: 更新通知配置\n   * @param {Object} options 要更新的配置项以遍历的形式更新配置\n   *\n   */\n  updateOptions(options) {\n    if (options && util.checkData('Object', options)) {\n      for (const key in options) {\n        this.options[key] = options[key];\n      }\n    } else {\n      console.warn('updateOptions参数错误：options为必填对象');\n    }\n  }\n\n  // 替换通知标题\n  replaceTitle(title) {\n    if (title && util.checkData('String', title)) {\n      this.title = title;\n    } else {\n      console.warn('replaceTitle: title(通知标题)为必填字符串');\n    }\n  }\n\n  // 提换通知配置\n  replaceOptions(options) {\n    if (options && util.checkData('Object', options)) {\n      this.options = options;\n    } else {\n      console.warn('replaceOptions参数错误：options为必填对象');\n    }\n  }\n\n  // 状态检测\n  checkStatus(type) {\n    if (type === 'support') {\n      if (!this.support) {\n        console.warn('用户浏览器不支持');\n        return false;\n      }\n    } else if (type === 'userAgreed') {\n      if (this.state !== 'granted') {\n        return false;\n      }\n      if (!this.checkStatus('support')) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport default notification;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/notification-koro1/src/main.js\n// module id = null\n// module chunks = ","<template>\n  <div class=\"home\">\n    <h1 @click=\"requestPermission\">点击显示通知</h1>\n  </div>\n</template>\n\n<script>\n    import notificationKoro from \"notification-koro1\";\n\n    export default {\n        name: \"home\",\n        data() {\n            return {\n                notificationClass: null,\n                showNatification: null\n            };\n        },\n        methods: {\n            requestPermission() {\n                const userSelectFn = msg => {\n                    if (msg === \"already granted\" || msg === \"granted\") {\n                        // 随时可以调用通知\n                        this.notificationClass.userAgreed();\n                    } else if (msg === \"close\") {\n                        // 请求权限通知被关闭\n                    } else if (msg === \"denied\" || msg === \"already denied\") {\n                        // 请求权限当前被拒绝 || 曾经被拒绝\n                    }\n                };\n                return this.notificationClass.initNotification(userSelectFn);\n            }\n        },\n        mounted() {\n            const options = {\n                dir: \"rtl\", // 文字从右到左\n                body: \"哈哈哈\", // body部分的文字\n                // lang: '', // 通知语言\n                // tag: '通知id', // 通知id，用以替换、刷新、移除的时候用\n                // 通知图标\n                // icon: \"https://upload-images.jianshu.io/upload_images/5245297-818e624b75271127.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"\n            };\n            this.notificationClass = new notificationKoro(\"通知\", options); // 初始化\n            if (this.notificationClass.support) {\n                this.notificationClass.notificationEvent({\n                    // 点击弹窗回调\n                    \"onclick\": e => {\n                        console.log(\"点击通知打开百度\", e);\n                        window.open(\"https://www.baidu.com/\", \"_blank\");\n                    },\n                    // 弹窗显示回调\n                    \"onshow\": e => {\n                        console.log(\"显示\", e);\n                    },\n                    // 异常回调\n                    \"onerror\": e => {\n                        console.log(\"错误\", e);\n                    },\n                    // 关闭回调\n                    \"onclose\": e => {\n                        console.log(\"用户关闭通知\", e);\n                    }\n                });\n                // 弹窗权限\n                return this.requestPermission();\n            } else {\n                // 浏览器不支持\n                console.log(\"当前浏览器版本不支持natification,建议升级你的浏览器\");\n            }\n        }\n    };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Notification.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('h1',{on:{\"click\":_vm.requestPermission}},[_vm._v(\"点击显示通知\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-341e6cbc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Notification.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Notification.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Notification.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-341e6cbc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Notification.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Notification.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}